// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

// @@protoc_insertion_point(imports)

@class MPACL;
@class MPACLBuilder;
@class MPACLChanACL;
@class MPACLChanACLBuilder;
@class MPACLChanGroup;
@class MPACLChanGroupBuilder;
@class MPAuthenticate;
@class MPAuthenticateBuilder;
@class MPBanList;
@class MPBanListBanEntry;
@class MPBanListBanEntryBuilder;
@class MPBanListBuilder;
@class MPChannelRemove;
@class MPChannelRemoveBuilder;
@class MPChannelState;
@class MPChannelStateBuilder;
@class MPCodecVersion;
@class MPCodecVersionBuilder;
@class MPContextAction;
@class MPContextActionBuilder;
@class MPContextActionModify;
@class MPContextActionModifyBuilder;
@class MPCryptSetup;
@class MPCryptSetupBuilder;
@class MPPermissionDenied;
@class MPPermissionDeniedBuilder;
@class MPPermissionQuery;
@class MPPermissionQueryBuilder;
@class MPPing;
@class MPPingBuilder;
@class MPPluginDataTransmission;
@class MPPluginDataTransmissionBuilder;
@class MPQueryUsers;
@class MPQueryUsersBuilder;
@class MPReject;
@class MPRejectBuilder;
@class MPRequestBlob;
@class MPRequestBlobBuilder;
@class MPServerConfig;
@class MPServerConfigBuilder;
@class MPServerSync;
@class MPServerSyncBuilder;
@class MPSuggestConfig;
@class MPSuggestConfigBuilder;
@class MPTextMessage;
@class MPTextMessageBuilder;
@class MPUDPTunnel;
@class MPUDPTunnelBuilder;
@class MPUserList;
@class MPUserListBuilder;
@class MPUserListUser;
@class MPUserListUserBuilder;
@class MPUserRemove;
@class MPUserRemoveBuilder;
@class MPUserState;
@class MPUserStateBuilder;
@class MPUserStats;
@class MPUserStatsBuilder;
@class MPUserStatsStats;
@class MPUserStatsStatsBuilder;
@class MPVersion;
@class MPVersionBuilder;
@class MPVoiceTarget;
@class MPVoiceTargetBuilder;
@class MPVoiceTargetTarget;
@class MPVoiceTargetTargetBuilder;
@class ObjectiveCFileOptions;
@class ObjectiveCFileOptionsBuilder;
@class PBDescriptorProto;
@class PBDescriptorProtoBuilder;
@class PBDescriptorProtoExtensionRange;
@class PBDescriptorProtoExtensionRangeBuilder;
@class PBDescriptorProtoReservedRange;
@class PBDescriptorProtoReservedRangeBuilder;
@class PBEnumDescriptorProto;
@class PBEnumDescriptorProtoBuilder;
@class PBEnumOptions;
@class PBEnumOptionsBuilder;
@class PBEnumValueDescriptorProto;
@class PBEnumValueDescriptorProtoBuilder;
@class PBEnumValueOptions;
@class PBEnumValueOptionsBuilder;
@class PBFieldDescriptorProto;
@class PBFieldDescriptorProtoBuilder;
@class PBFieldOptions;
@class PBFieldOptionsBuilder;
@class PBFileDescriptorProto;
@class PBFileDescriptorProtoBuilder;
@class PBFileDescriptorSet;
@class PBFileDescriptorSetBuilder;
@class PBFileOptions;
@class PBFileOptionsBuilder;
@class PBMessageOptions;
@class PBMessageOptionsBuilder;
@class PBMethodDescriptorProto;
@class PBMethodDescriptorProtoBuilder;
@class PBMethodOptions;
@class PBMethodOptionsBuilder;
@class PBOneofDescriptorProto;
@class PBOneofDescriptorProtoBuilder;
@class PBServiceDescriptorProto;
@class PBServiceDescriptorProtoBuilder;
@class PBServiceOptions;
@class PBServiceOptionsBuilder;
@class PBSourceCodeInfo;
@class PBSourceCodeInfoBuilder;
@class PBSourceCodeInfoLocation;
@class PBSourceCodeInfoLocationBuilder;
@class PBUninterpretedOption;
@class PBUninterpretedOptionBuilder;
@class PBUninterpretedOptionNamePart;
@class PBUninterpretedOptionNamePartBuilder;


typedef NS_ENUM(SInt32, MPRejectRejectType) {
  MPRejectRejectTypeNone = 0,
  MPRejectRejectTypeWrongVersion = 1,
  MPRejectRejectTypeInvalidUsername = 2,
  MPRejectRejectTypeWrongUserPw = 3,
  MPRejectRejectTypeWrongServerPw = 4,
  MPRejectRejectTypeUsernameInUse = 5,
  MPRejectRejectTypeServerFull = 6,
  MPRejectRejectTypeNoCertificate = 7,
  MPRejectRejectTypeAuthenticatorFail = 8,
};

BOOL MPRejectRejectTypeIsValidValue(MPRejectRejectType value);
NSString *NSStringFromMPRejectRejectType(MPRejectRejectType value);

typedef NS_ENUM(SInt32, MPPermissionDeniedDenyType) {
  MPPermissionDeniedDenyTypeText = 0,
  MPPermissionDeniedDenyTypePermission = 1,
  MPPermissionDeniedDenyTypeSuperUser = 2,
  MPPermissionDeniedDenyTypeChannelName = 3,
  MPPermissionDeniedDenyTypeTextTooLong = 4,
  MPPermissionDeniedDenyTypeH9K = 5,
  MPPermissionDeniedDenyTypeTemporaryChannel = 6,
  MPPermissionDeniedDenyTypeMissingCertificate = 7,
  MPPermissionDeniedDenyTypeUserName = 8,
  MPPermissionDeniedDenyTypeChannelFull = 9,
  MPPermissionDeniedDenyTypeNestingLimit = 10,
  MPPermissionDeniedDenyTypeChannelCountLimit = 11,
  MPPermissionDeniedDenyTypeChannelListenerLimit = 12,
  MPPermissionDeniedDenyTypeUserListenerLimit = 13,
};

BOOL MPPermissionDeniedDenyTypeIsValidValue(MPPermissionDeniedDenyType value);
NSString *NSStringFromMPPermissionDeniedDenyType(MPPermissionDeniedDenyType value);

typedef NS_ENUM(SInt32, MPContextActionModifyContext) {
  MPContextActionModifyContextServer = 1,
  MPContextActionModifyContextChannel = 2,
  MPContextActionModifyContextUser = 4,
};

BOOL MPContextActionModifyContextIsValidValue(MPContextActionModifyContext value);
NSString *NSStringFromMPContextActionModifyContext(MPContextActionModifyContext value);

typedef NS_ENUM(SInt32, MPContextActionModifyOperation) {
  MPContextActionModifyOperationAdd = 0,
  MPContextActionModifyOperationRemove = 1,
};

BOOL MPContextActionModifyOperationIsValidValue(MPContextActionModifyOperation value);
NSString *NSStringFromMPContextActionModifyOperation(MPContextActionModifyOperation value);


@interface MPMumbleRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

#define Version_version @"version"
#define Version_release @"release"
#define Version_os @"os"
#define Version_os_version @"osVersion"
@interface MPVersion : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasRelease_:1;
  BOOL hasOs_:1;
  BOOL hasOsVersion_:1;
  BOOL hasVersion_:1;
  NSString* release;
  NSString* os;
  NSString* osVersion;
  UInt32 version;
}
- (BOOL) hasVersion;
- (BOOL) hasRelease;
- (BOOL) hasOs;
- (BOOL) hasOsVersion;
@property (readonly) UInt32 version;
@property (readonly, strong) NSString* release;
@property (readonly, strong) NSString* os;
@property (readonly, strong) NSString* osVersion;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPVersionBuilder*) builder;
+ (MPVersionBuilder*) builder;
+ (MPVersionBuilder*) builderWithPrototype:(MPVersion*) prototype;
- (MPVersionBuilder*) toBuilder;

+ (MPVersion*) parseFromData:(NSData*) data;
+ (MPVersion*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPVersion*) parseFromInputStream:(NSInputStream*) input;
+ (MPVersion*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPVersion*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPVersion*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPVersionBuilder : PBGeneratedMessageBuilder {
@private
  MPVersion* resultVersion;
}

- (MPVersion*) defaultInstance;

- (MPVersionBuilder*) clear;
- (MPVersionBuilder*) clone;

- (MPVersion*) build;
- (MPVersion*) buildPartial;

- (MPVersionBuilder*) mergeFrom:(MPVersion*) other;
- (MPVersionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPVersionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasVersion;
- (UInt32) version;
- (MPVersionBuilder*) setVersion:(UInt32) value;
- (MPVersionBuilder*) clearVersion;

- (BOOL) hasRelease;
- (NSString*) release;
- (MPVersionBuilder*) setRelease:(NSString*) value;
- (MPVersionBuilder*) clearRelease;

- (BOOL) hasOs;
- (NSString*) os;
- (MPVersionBuilder*) setOs:(NSString*) value;
- (MPVersionBuilder*) clearOs;

- (BOOL) hasOsVersion;
- (NSString*) osVersion;
- (MPVersionBuilder*) setOsVersion:(NSString*) value;
- (MPVersionBuilder*) clearOsVersion;
@end

#define UDPTunnel_packet @"packet"
@interface MPUDPTunnel : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPacket_:1;
  NSData* packet;
}
- (BOOL) hasPacket;
@property (readonly, strong) NSData* packet;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPUDPTunnelBuilder*) builder;
+ (MPUDPTunnelBuilder*) builder;
+ (MPUDPTunnelBuilder*) builderWithPrototype:(MPUDPTunnel*) prototype;
- (MPUDPTunnelBuilder*) toBuilder;

+ (MPUDPTunnel*) parseFromData:(NSData*) data;
+ (MPUDPTunnel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPUDPTunnel*) parseFromInputStream:(NSInputStream*) input;
+ (MPUDPTunnel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPUDPTunnel*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPUDPTunnel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPUDPTunnelBuilder : PBGeneratedMessageBuilder {
@private
  MPUDPTunnel* resultUdptunnel;
}

- (MPUDPTunnel*) defaultInstance;

- (MPUDPTunnelBuilder*) clear;
- (MPUDPTunnelBuilder*) clone;

- (MPUDPTunnel*) build;
- (MPUDPTunnel*) buildPartial;

- (MPUDPTunnelBuilder*) mergeFrom:(MPUDPTunnel*) other;
- (MPUDPTunnelBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPUDPTunnelBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPacket;
- (NSData*) packet;
- (MPUDPTunnelBuilder*) setPacket:(NSData*) value;
- (MPUDPTunnelBuilder*) clearPacket;
@end

#define Authenticate_username @"username"
#define Authenticate_password @"password"
#define Authenticate_tokens @"tokens"
#define Authenticate_celt_versions @"celtVersions"
#define Authenticate_opus @"opus"
@interface MPAuthenticate : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasOpus_:1;
  BOOL hasUsername_:1;
  BOOL hasPassword_:1;
  BOOL opus_:1;
  NSString* username;
  NSString* password;
  PBAppendableArray * celtVersionsArray;
  NSMutableArray * tokensArray;
}
- (BOOL) hasUsername;
- (BOOL) hasPassword;
- (BOOL) hasOpus;
@property (readonly, strong) NSString* username;
@property (readonly, strong) NSString* password;
@property (readonly, strong) NSArray * tokens;
@property (readonly, strong) PBArray * celtVersions;
- (BOOL) opus;
- (NSString*)tokensAtIndex:(NSUInteger)index;
- (SInt32)celtVersionsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPAuthenticateBuilder*) builder;
+ (MPAuthenticateBuilder*) builder;
+ (MPAuthenticateBuilder*) builderWithPrototype:(MPAuthenticate*) prototype;
- (MPAuthenticateBuilder*) toBuilder;

+ (MPAuthenticate*) parseFromData:(NSData*) data;
+ (MPAuthenticate*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPAuthenticate*) parseFromInputStream:(NSInputStream*) input;
+ (MPAuthenticate*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPAuthenticate*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPAuthenticate*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPAuthenticateBuilder : PBGeneratedMessageBuilder {
@private
  MPAuthenticate* resultAuthenticate;
}

- (MPAuthenticate*) defaultInstance;

- (MPAuthenticateBuilder*) clear;
- (MPAuthenticateBuilder*) clone;

- (MPAuthenticate*) build;
- (MPAuthenticate*) buildPartial;

- (MPAuthenticateBuilder*) mergeFrom:(MPAuthenticate*) other;
- (MPAuthenticateBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPAuthenticateBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUsername;
- (NSString*) username;
- (MPAuthenticateBuilder*) setUsername:(NSString*) value;
- (MPAuthenticateBuilder*) clearUsername;

- (BOOL) hasPassword;
- (NSString*) password;
- (MPAuthenticateBuilder*) setPassword:(NSString*) value;
- (MPAuthenticateBuilder*) clearPassword;

- (NSMutableArray *)tokens;
- (NSString*)tokensAtIndex:(NSUInteger)index;
- (MPAuthenticateBuilder *)addTokens:(NSString*)value;
- (MPAuthenticateBuilder *)setTokensArray:(NSArray *)array;
- (MPAuthenticateBuilder *)clearTokens;

- (PBAppendableArray *)celtVersions;
- (SInt32)celtVersionsAtIndex:(NSUInteger)index;
- (MPAuthenticateBuilder *)addCeltVersions:(SInt32)value;
- (MPAuthenticateBuilder *)setCeltVersionsArray:(NSArray *)array;
- (MPAuthenticateBuilder *)setCeltVersionsValues:(const SInt32 *)values count:(NSUInteger)count;
- (MPAuthenticateBuilder *)clearCeltVersions;

- (BOOL) hasOpus;
- (BOOL) opus;
- (MPAuthenticateBuilder*) setOpus:(BOOL) value;
- (MPAuthenticateBuilder*) clearOpus;
@end

#define Ping_timestamp @"timestamp"
#define Ping_good @"good"
#define Ping_late @"late"
#define Ping_lost @"lost"
#define Ping_resync @"resync"
#define Ping_udp_packets @"udpPackets"
#define Ping_tcp_packets @"tcpPackets"
#define Ping_udp_ping_avg @"udpPingAvg"
#define Ping_udp_ping_var @"udpPingVar"
#define Ping_tcp_ping_avg @"tcpPingAvg"
#define Ping_tcp_ping_var @"tcpPingVar"
@interface MPPing : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasUdpPingAvg_:1;
  BOOL hasUdpPingVar_:1;
  BOOL hasTcpPingAvg_:1;
  BOOL hasTcpPingVar_:1;
  BOOL hasTimestamp_:1;
  BOOL hasGood_:1;
  BOOL hasLate_:1;
  BOOL hasLost_:1;
  BOOL hasResync_:1;
  BOOL hasUdpPackets_:1;
  BOOL hasTcpPackets_:1;
  Float32 udpPingAvg;
  Float32 udpPingVar;
  Float32 tcpPingAvg;
  Float32 tcpPingVar;
  UInt64 timestamp;
  UInt32 good;
  UInt32 late;
  UInt32 lost;
  UInt32 resync;
  UInt32 udpPackets;
  UInt32 tcpPackets;
}
- (BOOL) hasTimestamp;
- (BOOL) hasGood;
- (BOOL) hasLate;
- (BOOL) hasLost;
- (BOOL) hasResync;
- (BOOL) hasUdpPackets;
- (BOOL) hasTcpPackets;
- (BOOL) hasUdpPingAvg;
- (BOOL) hasUdpPingVar;
- (BOOL) hasTcpPingAvg;
- (BOOL) hasTcpPingVar;
@property (readonly) UInt64 timestamp;
@property (readonly) UInt32 good;
@property (readonly) UInt32 late;
@property (readonly) UInt32 lost;
@property (readonly) UInt32 resync;
@property (readonly) UInt32 udpPackets;
@property (readonly) UInt32 tcpPackets;
@property (readonly) Float32 udpPingAvg;
@property (readonly) Float32 udpPingVar;
@property (readonly) Float32 tcpPingAvg;
@property (readonly) Float32 tcpPingVar;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPPingBuilder*) builder;
+ (MPPingBuilder*) builder;
+ (MPPingBuilder*) builderWithPrototype:(MPPing*) prototype;
- (MPPingBuilder*) toBuilder;

+ (MPPing*) parseFromData:(NSData*) data;
+ (MPPing*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPPing*) parseFromInputStream:(NSInputStream*) input;
+ (MPPing*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPPing*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPPing*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPPingBuilder : PBGeneratedMessageBuilder {
@private
  MPPing* resultPing;
}

- (MPPing*) defaultInstance;

- (MPPingBuilder*) clear;
- (MPPingBuilder*) clone;

- (MPPing*) build;
- (MPPing*) buildPartial;

- (MPPingBuilder*) mergeFrom:(MPPing*) other;
- (MPPingBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPPingBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTimestamp;
- (UInt64) timestamp;
- (MPPingBuilder*) setTimestamp:(UInt64) value;
- (MPPingBuilder*) clearTimestamp;

- (BOOL) hasGood;
- (UInt32) good;
- (MPPingBuilder*) setGood:(UInt32) value;
- (MPPingBuilder*) clearGood;

- (BOOL) hasLate;
- (UInt32) late;
- (MPPingBuilder*) setLate:(UInt32) value;
- (MPPingBuilder*) clearLate;

- (BOOL) hasLost;
- (UInt32) lost;
- (MPPingBuilder*) setLost:(UInt32) value;
- (MPPingBuilder*) clearLost;

- (BOOL) hasResync;
- (UInt32) resync;
- (MPPingBuilder*) setResync:(UInt32) value;
- (MPPingBuilder*) clearResync;

- (BOOL) hasUdpPackets;
- (UInt32) udpPackets;
- (MPPingBuilder*) setUdpPackets:(UInt32) value;
- (MPPingBuilder*) clearUdpPackets;

- (BOOL) hasTcpPackets;
- (UInt32) tcpPackets;
- (MPPingBuilder*) setTcpPackets:(UInt32) value;
- (MPPingBuilder*) clearTcpPackets;

- (BOOL) hasUdpPingAvg;
- (Float32) udpPingAvg;
- (MPPingBuilder*) setUdpPingAvg:(Float32) value;
- (MPPingBuilder*) clearUdpPingAvg;

- (BOOL) hasUdpPingVar;
- (Float32) udpPingVar;
- (MPPingBuilder*) setUdpPingVar:(Float32) value;
- (MPPingBuilder*) clearUdpPingVar;

- (BOOL) hasTcpPingAvg;
- (Float32) tcpPingAvg;
- (MPPingBuilder*) setTcpPingAvg:(Float32) value;
- (MPPingBuilder*) clearTcpPingAvg;

- (BOOL) hasTcpPingVar;
- (Float32) tcpPingVar;
- (MPPingBuilder*) setTcpPingVar:(Float32) value;
- (MPPingBuilder*) clearTcpPingVar;
@end

#define Reject_type @"type"
#define Reject_reason @"reason"
@interface MPReject : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasReason_:1;
  BOOL hasType_:1;
  NSString* reason;
  MPRejectRejectType type;
}
- (BOOL) hasType;
- (BOOL) hasReason;
@property (readonly) MPRejectRejectType type;
@property (readonly, strong) NSString* reason;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPRejectBuilder*) builder;
+ (MPRejectBuilder*) builder;
+ (MPRejectBuilder*) builderWithPrototype:(MPReject*) prototype;
- (MPRejectBuilder*) toBuilder;

+ (MPReject*) parseFromData:(NSData*) data;
+ (MPReject*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPReject*) parseFromInputStream:(NSInputStream*) input;
+ (MPReject*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPReject*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPReject*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPRejectBuilder : PBGeneratedMessageBuilder {
@private
  MPReject* resultReject;
}

- (MPReject*) defaultInstance;

- (MPRejectBuilder*) clear;
- (MPRejectBuilder*) clone;

- (MPReject*) build;
- (MPReject*) buildPartial;

- (MPRejectBuilder*) mergeFrom:(MPReject*) other;
- (MPRejectBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPRejectBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasType;
- (MPRejectRejectType) type;
- (MPRejectBuilder*) setType:(MPRejectRejectType) value;
- (MPRejectBuilder*) clearType;

- (BOOL) hasReason;
- (NSString*) reason;
- (MPRejectBuilder*) setReason:(NSString*) value;
- (MPRejectBuilder*) clearReason;
@end

#define ServerSync_session @"session"
#define ServerSync_max_bandwidth @"maxBandwidth"
#define ServerSync_welcome_text @"welcomeText"
#define ServerSync_permissions @"permissions"
@interface MPServerSync : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPermissions_:1;
  BOOL hasWelcomeText_:1;
  BOOL hasSession_:1;
  BOOL hasMaxBandwidth_:1;
  UInt64 permissions;
  NSString* welcomeText;
  UInt32 session;
  UInt32 maxBandwidth;
}
- (BOOL) hasSession;
- (BOOL) hasMaxBandwidth;
- (BOOL) hasWelcomeText;
- (BOOL) hasPermissions;
@property (readonly) UInt32 session;
@property (readonly) UInt32 maxBandwidth;
@property (readonly, strong) NSString* welcomeText;
@property (readonly) UInt64 permissions;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPServerSyncBuilder*) builder;
+ (MPServerSyncBuilder*) builder;
+ (MPServerSyncBuilder*) builderWithPrototype:(MPServerSync*) prototype;
- (MPServerSyncBuilder*) toBuilder;

+ (MPServerSync*) parseFromData:(NSData*) data;
+ (MPServerSync*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPServerSync*) parseFromInputStream:(NSInputStream*) input;
+ (MPServerSync*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPServerSync*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPServerSync*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPServerSyncBuilder : PBGeneratedMessageBuilder {
@private
  MPServerSync* resultServerSync;
}

- (MPServerSync*) defaultInstance;

- (MPServerSyncBuilder*) clear;
- (MPServerSyncBuilder*) clone;

- (MPServerSync*) build;
- (MPServerSync*) buildPartial;

- (MPServerSyncBuilder*) mergeFrom:(MPServerSync*) other;
- (MPServerSyncBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPServerSyncBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSession;
- (UInt32) session;
- (MPServerSyncBuilder*) setSession:(UInt32) value;
- (MPServerSyncBuilder*) clearSession;

- (BOOL) hasMaxBandwidth;
- (UInt32) maxBandwidth;
- (MPServerSyncBuilder*) setMaxBandwidth:(UInt32) value;
- (MPServerSyncBuilder*) clearMaxBandwidth;

- (BOOL) hasWelcomeText;
- (NSString*) welcomeText;
- (MPServerSyncBuilder*) setWelcomeText:(NSString*) value;
- (MPServerSyncBuilder*) clearWelcomeText;

- (BOOL) hasPermissions;
- (UInt64) permissions;
- (MPServerSyncBuilder*) setPermissions:(UInt64) value;
- (MPServerSyncBuilder*) clearPermissions;
@end

#define ChannelRemove_channel_id @"channelId"
@interface MPChannelRemove : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasChannelId_:1;
  UInt32 channelId;
}
- (BOOL) hasChannelId;
@property (readonly) UInt32 channelId;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPChannelRemoveBuilder*) builder;
+ (MPChannelRemoveBuilder*) builder;
+ (MPChannelRemoveBuilder*) builderWithPrototype:(MPChannelRemove*) prototype;
- (MPChannelRemoveBuilder*) toBuilder;

+ (MPChannelRemove*) parseFromData:(NSData*) data;
+ (MPChannelRemove*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPChannelRemove*) parseFromInputStream:(NSInputStream*) input;
+ (MPChannelRemove*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPChannelRemove*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPChannelRemove*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPChannelRemoveBuilder : PBGeneratedMessageBuilder {
@private
  MPChannelRemove* resultChannelRemove;
}

- (MPChannelRemove*) defaultInstance;

- (MPChannelRemoveBuilder*) clear;
- (MPChannelRemoveBuilder*) clone;

- (MPChannelRemove*) build;
- (MPChannelRemove*) buildPartial;

- (MPChannelRemoveBuilder*) mergeFrom:(MPChannelRemove*) other;
- (MPChannelRemoveBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPChannelRemoveBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChannelId;
- (UInt32) channelId;
- (MPChannelRemoveBuilder*) setChannelId:(UInt32) value;
- (MPChannelRemoveBuilder*) clearChannelId;
@end

#define ChannelState_channel_id @"channelId"
#define ChannelState_parent @"parent"
#define ChannelState_name @"name"
#define ChannelState_links @"links"
#define ChannelState_description @"pb_description"
#define ChannelState_links_add @"linksAdd"
#define ChannelState_links_remove @"linksRemove"
#define ChannelState_temporary @"temporary"
#define ChannelState_position @"position"
#define ChannelState_description_hash @"descriptionHash"
#define ChannelState_max_users @"maxUsers"
#define ChannelState_is_enter_restricted @"isEnterRestricted"
#define ChannelState_can_enter @"canEnter"
@interface MPChannelState : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasTemporary_:1;
  BOOL hasIsEnterRestricted_:1;
  BOOL hasCanEnter_:1;
  BOOL hasPosition_:1;
  BOOL hasName_:1;
  BOOL hasDescription_:1;
  BOOL hasDescriptionHash_:1;
  BOOL hasChannelId_:1;
  BOOL hasParent_:1;
  BOOL hasMaxUsers_:1;
  BOOL temporary_:1;
  BOOL isEnterRestricted_:1;
  BOOL canEnter_:1;
  SInt32 position;
  NSString* name;
  NSString* pb_description;
  NSData* descriptionHash;
  UInt32 channelId;
  UInt32 parent;
  UInt32 maxUsers;
  PBAppendableArray * linksArray;
  PBAppendableArray * linksAddArray;
  PBAppendableArray * linksRemoveArray;
}
- (BOOL) hasChannelId;
- (BOOL) hasParent;
- (BOOL) hasName;
- (BOOL) hasDescription;
- (BOOL) hasTemporary;
- (BOOL) hasPosition;
- (BOOL) hasDescriptionHash;
- (BOOL) hasMaxUsers;
- (BOOL) hasIsEnterRestricted;
- (BOOL) hasCanEnter;
@property (readonly) UInt32 channelId;
@property (readonly) UInt32 parent;
@property (readonly, strong) NSString* name;
@property (readonly, strong) PBArray * links;
@property (readonly, strong) NSString* pb_description;
@property (readonly, strong) PBArray * linksAdd;
@property (readonly, strong) PBArray * linksRemove;
- (BOOL) temporary;
@property (readonly) SInt32 position;
@property (readonly, strong) NSData* descriptionHash;
@property (readonly) UInt32 maxUsers;
- (BOOL) isEnterRestricted;
- (BOOL) canEnter;
- (UInt32)linksAtIndex:(NSUInteger)index;
- (UInt32)linksAddAtIndex:(NSUInteger)index;
- (UInt32)linksRemoveAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPChannelStateBuilder*) builder;
+ (MPChannelStateBuilder*) builder;
+ (MPChannelStateBuilder*) builderWithPrototype:(MPChannelState*) prototype;
- (MPChannelStateBuilder*) toBuilder;

+ (MPChannelState*) parseFromData:(NSData*) data;
+ (MPChannelState*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPChannelState*) parseFromInputStream:(NSInputStream*) input;
+ (MPChannelState*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPChannelState*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPChannelState*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPChannelStateBuilder : PBGeneratedMessageBuilder {
@private
  MPChannelState* resultChannelState;
}

- (MPChannelState*) defaultInstance;

- (MPChannelStateBuilder*) clear;
- (MPChannelStateBuilder*) clone;

- (MPChannelState*) build;
- (MPChannelState*) buildPartial;

- (MPChannelStateBuilder*) mergeFrom:(MPChannelState*) other;
- (MPChannelStateBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPChannelStateBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChannelId;
- (UInt32) channelId;
- (MPChannelStateBuilder*) setChannelId:(UInt32) value;
- (MPChannelStateBuilder*) clearChannelId;

- (BOOL) hasParent;
- (UInt32) parent;
- (MPChannelStateBuilder*) setParent:(UInt32) value;
- (MPChannelStateBuilder*) clearParent;

- (BOOL) hasName;
- (NSString*) name;
- (MPChannelStateBuilder*) setName:(NSString*) value;
- (MPChannelStateBuilder*) clearName;

- (PBAppendableArray *)links;
- (UInt32)linksAtIndex:(NSUInteger)index;
- (MPChannelStateBuilder *)addLinks:(UInt32)value;
- (MPChannelStateBuilder *)setLinksArray:(NSArray *)array;
- (MPChannelStateBuilder *)setLinksValues:(const UInt32 *)values count:(NSUInteger)count;
- (MPChannelStateBuilder *)clearLinks;

- (BOOL) hasDescription;
- (NSString*) pb_description;
- (MPChannelStateBuilder*) setDescription:(NSString*) value;
- (MPChannelStateBuilder*) clearDescription;

- (PBAppendableArray *)linksAdd;
- (UInt32)linksAddAtIndex:(NSUInteger)index;
- (MPChannelStateBuilder *)addLinksAdd:(UInt32)value;
- (MPChannelStateBuilder *)setLinksAddArray:(NSArray *)array;
- (MPChannelStateBuilder *)setLinksAddValues:(const UInt32 *)values count:(NSUInteger)count;
- (MPChannelStateBuilder *)clearLinksAdd;

- (PBAppendableArray *)linksRemove;
- (UInt32)linksRemoveAtIndex:(NSUInteger)index;
- (MPChannelStateBuilder *)addLinksRemove:(UInt32)value;
- (MPChannelStateBuilder *)setLinksRemoveArray:(NSArray *)array;
- (MPChannelStateBuilder *)setLinksRemoveValues:(const UInt32 *)values count:(NSUInteger)count;
- (MPChannelStateBuilder *)clearLinksRemove;

- (BOOL) hasTemporary;
- (BOOL) temporary;
- (MPChannelStateBuilder*) setTemporary:(BOOL) value;
- (MPChannelStateBuilder*) clearTemporary;

- (BOOL) hasPosition;
- (SInt32) position;
- (MPChannelStateBuilder*) setPosition:(SInt32) value;
- (MPChannelStateBuilder*) clearPosition;

- (BOOL) hasDescriptionHash;
- (NSData*) descriptionHash;
- (MPChannelStateBuilder*) setDescriptionHash:(NSData*) value;
- (MPChannelStateBuilder*) clearDescriptionHash;

- (BOOL) hasMaxUsers;
- (UInt32) maxUsers;
- (MPChannelStateBuilder*) setMaxUsers:(UInt32) value;
- (MPChannelStateBuilder*) clearMaxUsers;

- (BOOL) hasIsEnterRestricted;
- (BOOL) isEnterRestricted;
- (MPChannelStateBuilder*) setIsEnterRestricted:(BOOL) value;
- (MPChannelStateBuilder*) clearIsEnterRestricted;

- (BOOL) hasCanEnter;
- (BOOL) canEnter;
- (MPChannelStateBuilder*) setCanEnter:(BOOL) value;
- (MPChannelStateBuilder*) clearCanEnter;
@end

#define UserRemove_session @"session"
#define UserRemove_actor @"actor"
#define UserRemove_reason @"reason"
#define UserRemove_ban @"ban"
@interface MPUserRemove : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasBan_:1;
  BOOL hasReason_:1;
  BOOL hasSession_:1;
  BOOL hasActor_:1;
  BOOL ban_:1;
  NSString* reason;
  UInt32 session;
  UInt32 actor;
}
- (BOOL) hasSession;
- (BOOL) hasActor;
- (BOOL) hasReason;
- (BOOL) hasBan;
@property (readonly) UInt32 session;
@property (readonly) UInt32 actor;
@property (readonly, strong) NSString* reason;
- (BOOL) ban;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPUserRemoveBuilder*) builder;
+ (MPUserRemoveBuilder*) builder;
+ (MPUserRemoveBuilder*) builderWithPrototype:(MPUserRemove*) prototype;
- (MPUserRemoveBuilder*) toBuilder;

+ (MPUserRemove*) parseFromData:(NSData*) data;
+ (MPUserRemove*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPUserRemove*) parseFromInputStream:(NSInputStream*) input;
+ (MPUserRemove*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPUserRemove*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPUserRemove*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPUserRemoveBuilder : PBGeneratedMessageBuilder {
@private
  MPUserRemove* resultUserRemove;
}

- (MPUserRemove*) defaultInstance;

- (MPUserRemoveBuilder*) clear;
- (MPUserRemoveBuilder*) clone;

- (MPUserRemove*) build;
- (MPUserRemove*) buildPartial;

- (MPUserRemoveBuilder*) mergeFrom:(MPUserRemove*) other;
- (MPUserRemoveBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPUserRemoveBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSession;
- (UInt32) session;
- (MPUserRemoveBuilder*) setSession:(UInt32) value;
- (MPUserRemoveBuilder*) clearSession;

- (BOOL) hasActor;
- (UInt32) actor;
- (MPUserRemoveBuilder*) setActor:(UInt32) value;
- (MPUserRemoveBuilder*) clearActor;

- (BOOL) hasReason;
- (NSString*) reason;
- (MPUserRemoveBuilder*) setReason:(NSString*) value;
- (MPUserRemoveBuilder*) clearReason;

- (BOOL) hasBan;
- (BOOL) ban;
- (MPUserRemoveBuilder*) setBan:(BOOL) value;
- (MPUserRemoveBuilder*) clearBan;
@end

#define UserState_session @"session"
#define UserState_actor @"actor"
#define UserState_name @"name"
#define UserState_user_id @"userId"
#define UserState_channel_id @"channelId"
#define UserState_mute @"mute"
#define UserState_deaf @"deaf"
#define UserState_suppress @"suppress"
#define UserState_self_mute @"selfMute"
#define UserState_self_deaf @"selfDeaf"
#define UserState_texture @"texture"
#define UserState_plugin_context @"pluginContext"
#define UserState_plugin_identity @"pluginIdentity"
#define UserState_comment @"comment"
#define UserState_hash @"pb_hash"
#define UserState_comment_hash @"commentHash"
#define UserState_texture_hash @"textureHash"
#define UserState_priority_speaker @"prioritySpeaker"
#define UserState_recording @"recording"
#define UserState_temporary_access_tokens @"temporaryAccessTokens"
#define UserState_listening_channel_add @"listeningChannelAdd"
#define UserState_listening_channel_remove @"listeningChannelRemove"
@interface MPUserState : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasMute_:1;
  BOOL hasDeaf_:1;
  BOOL hasSuppress_:1;
  BOOL hasSelfMute_:1;
  BOOL hasSelfDeaf_:1;
  BOOL hasPrioritySpeaker_:1;
  BOOL hasRecording_:1;
  BOOL hasName_:1;
  BOOL hasPluginIdentity_:1;
  BOOL hasComment_:1;
  BOOL hasHash_:1;
  BOOL hasTexture_:1;
  BOOL hasPluginContext_:1;
  BOOL hasCommentHash_:1;
  BOOL hasTextureHash_:1;
  BOOL hasSession_:1;
  BOOL hasActor_:1;
  BOOL hasUserId_:1;
  BOOL hasChannelId_:1;
  BOOL mute_:1;
  BOOL deaf_:1;
  BOOL suppress_:1;
  BOOL selfMute_:1;
  BOOL selfDeaf_:1;
  BOOL prioritySpeaker_:1;
  BOOL recording_:1;
  NSString* name;
  NSString* pluginIdentity;
  NSString* comment;
  NSString* pb_hash;
  NSData* texture;
  NSData* pluginContext;
  NSData* commentHash;
  NSData* textureHash;
  UInt32 session;
  UInt32 actor;
  UInt32 userId;
  UInt32 channelId;
  NSMutableArray * temporaryAccessTokensArray;
  PBAppendableArray * listeningChannelAddArray;
  PBAppendableArray * listeningChannelRemoveArray;
}
- (BOOL) hasSession;
- (BOOL) hasActor;
- (BOOL) hasName;
- (BOOL) hasUserId;
- (BOOL) hasChannelId;
- (BOOL) hasMute;
- (BOOL) hasDeaf;
- (BOOL) hasSuppress;
- (BOOL) hasSelfMute;
- (BOOL) hasSelfDeaf;
- (BOOL) hasTexture;
- (BOOL) hasPluginContext;
- (BOOL) hasPluginIdentity;
- (BOOL) hasComment;
- (BOOL) hasHash;
- (BOOL) hasCommentHash;
- (BOOL) hasTextureHash;
- (BOOL) hasPrioritySpeaker;
- (BOOL) hasRecording;
@property (readonly) UInt32 session;
@property (readonly) UInt32 actor;
@property (readonly, strong) NSString* name;
@property (readonly) UInt32 userId;
@property (readonly) UInt32 channelId;
- (BOOL) mute;
- (BOOL) deaf;
- (BOOL) suppress;
- (BOOL) selfMute;
- (BOOL) selfDeaf;
@property (readonly, strong) NSData* texture;
@property (readonly, strong) NSData* pluginContext;
@property (readonly, strong) NSString* pluginIdentity;
@property (readonly, strong) NSString* comment;
@property (readonly, strong) NSString* pb_hash;
@property (readonly, strong) NSData* commentHash;
@property (readonly, strong) NSData* textureHash;
- (BOOL) prioritySpeaker;
- (BOOL) recording;
@property (readonly, strong) NSArray * temporaryAccessTokens;
@property (readonly, strong) PBArray * listeningChannelAdd;
@property (readonly, strong) PBArray * listeningChannelRemove;
- (NSString*)temporaryAccessTokensAtIndex:(NSUInteger)index;
- (UInt32)listeningChannelAddAtIndex:(NSUInteger)index;
- (UInt32)listeningChannelRemoveAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPUserStateBuilder*) builder;
+ (MPUserStateBuilder*) builder;
+ (MPUserStateBuilder*) builderWithPrototype:(MPUserState*) prototype;
- (MPUserStateBuilder*) toBuilder;

+ (MPUserState*) parseFromData:(NSData*) data;
+ (MPUserState*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPUserState*) parseFromInputStream:(NSInputStream*) input;
+ (MPUserState*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPUserState*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPUserState*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPUserStateBuilder : PBGeneratedMessageBuilder {
@private
  MPUserState* resultUserState;
}

- (MPUserState*) defaultInstance;

- (MPUserStateBuilder*) clear;
- (MPUserStateBuilder*) clone;

- (MPUserState*) build;
- (MPUserState*) buildPartial;

- (MPUserStateBuilder*) mergeFrom:(MPUserState*) other;
- (MPUserStateBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPUserStateBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSession;
- (UInt32) session;
- (MPUserStateBuilder*) setSession:(UInt32) value;
- (MPUserStateBuilder*) clearSession;

- (BOOL) hasActor;
- (UInt32) actor;
- (MPUserStateBuilder*) setActor:(UInt32) value;
- (MPUserStateBuilder*) clearActor;

- (BOOL) hasName;
- (NSString*) name;
- (MPUserStateBuilder*) setName:(NSString*) value;
- (MPUserStateBuilder*) clearName;

- (BOOL) hasUserId;
- (UInt32) userId;
- (MPUserStateBuilder*) setUserId:(UInt32) value;
- (MPUserStateBuilder*) clearUserId;

- (BOOL) hasChannelId;
- (UInt32) channelId;
- (MPUserStateBuilder*) setChannelId:(UInt32) value;
- (MPUserStateBuilder*) clearChannelId;

- (BOOL) hasMute;
- (BOOL) mute;
- (MPUserStateBuilder*) setMute:(BOOL) value;
- (MPUserStateBuilder*) clearMute;

- (BOOL) hasDeaf;
- (BOOL) deaf;
- (MPUserStateBuilder*) setDeaf:(BOOL) value;
- (MPUserStateBuilder*) clearDeaf;

- (BOOL) hasSuppress;
- (BOOL) suppress;
- (MPUserStateBuilder*) setSuppress:(BOOL) value;
- (MPUserStateBuilder*) clearSuppress;

- (BOOL) hasSelfMute;
- (BOOL) selfMute;
- (MPUserStateBuilder*) setSelfMute:(BOOL) value;
- (MPUserStateBuilder*) clearSelfMute;

- (BOOL) hasSelfDeaf;
- (BOOL) selfDeaf;
- (MPUserStateBuilder*) setSelfDeaf:(BOOL) value;
- (MPUserStateBuilder*) clearSelfDeaf;

- (BOOL) hasTexture;
- (NSData*) texture;
- (MPUserStateBuilder*) setTexture:(NSData*) value;
- (MPUserStateBuilder*) clearTexture;

- (BOOL) hasPluginContext;
- (NSData*) pluginContext;
- (MPUserStateBuilder*) setPluginContext:(NSData*) value;
- (MPUserStateBuilder*) clearPluginContext;

- (BOOL) hasPluginIdentity;
- (NSString*) pluginIdentity;
- (MPUserStateBuilder*) setPluginIdentity:(NSString*) value;
- (MPUserStateBuilder*) clearPluginIdentity;

- (BOOL) hasComment;
- (NSString*) comment;
- (MPUserStateBuilder*) setComment:(NSString*) value;
- (MPUserStateBuilder*) clearComment;

- (BOOL) hasHash;
- (NSString*) pb_hash;
- (MPUserStateBuilder*) setHash:(NSString*) value;
- (MPUserStateBuilder*) clearHash;

- (BOOL) hasCommentHash;
- (NSData*) commentHash;
- (MPUserStateBuilder*) setCommentHash:(NSData*) value;
- (MPUserStateBuilder*) clearCommentHash;

- (BOOL) hasTextureHash;
- (NSData*) textureHash;
- (MPUserStateBuilder*) setTextureHash:(NSData*) value;
- (MPUserStateBuilder*) clearTextureHash;

- (BOOL) hasPrioritySpeaker;
- (BOOL) prioritySpeaker;
- (MPUserStateBuilder*) setPrioritySpeaker:(BOOL) value;
- (MPUserStateBuilder*) clearPrioritySpeaker;

- (BOOL) hasRecording;
- (BOOL) recording;
- (MPUserStateBuilder*) setRecording:(BOOL) value;
- (MPUserStateBuilder*) clearRecording;

- (NSMutableArray *)temporaryAccessTokens;
- (NSString*)temporaryAccessTokensAtIndex:(NSUInteger)index;
- (MPUserStateBuilder *)addTemporaryAccessTokens:(NSString*)value;
- (MPUserStateBuilder *)setTemporaryAccessTokensArray:(NSArray *)array;
- (MPUserStateBuilder *)clearTemporaryAccessTokens;

- (PBAppendableArray *)listeningChannelAdd;
- (UInt32)listeningChannelAddAtIndex:(NSUInteger)index;
- (MPUserStateBuilder *)addListeningChannelAdd:(UInt32)value;
- (MPUserStateBuilder *)setListeningChannelAddArray:(NSArray *)array;
- (MPUserStateBuilder *)setListeningChannelAddValues:(const UInt32 *)values count:(NSUInteger)count;
- (MPUserStateBuilder *)clearListeningChannelAdd;

- (PBAppendableArray *)listeningChannelRemove;
- (UInt32)listeningChannelRemoveAtIndex:(NSUInteger)index;
- (MPUserStateBuilder *)addListeningChannelRemove:(UInt32)value;
- (MPUserStateBuilder *)setListeningChannelRemoveArray:(NSArray *)array;
- (MPUserStateBuilder *)setListeningChannelRemoveValues:(const UInt32 *)values count:(NSUInteger)count;
- (MPUserStateBuilder *)clearListeningChannelRemove;
@end

#define BanList_bans @"bans"
#define BanList_query @"query"
@interface MPBanList : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasQuery_:1;
  BOOL query_:1;
  NSMutableArray * bansArray;
}
- (BOOL) hasQuery;
@property (readonly, strong) NSArray<MPBanListBanEntry*> * bans;
- (BOOL) query;
- (MPBanListBanEntry*)bansAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPBanListBuilder*) builder;
+ (MPBanListBuilder*) builder;
+ (MPBanListBuilder*) builderWithPrototype:(MPBanList*) prototype;
- (MPBanListBuilder*) toBuilder;

+ (MPBanList*) parseFromData:(NSData*) data;
+ (MPBanList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPBanList*) parseFromInputStream:(NSInputStream*) input;
+ (MPBanList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPBanList*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPBanList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

#define BanEntry_address @"address"
#define BanEntry_mask @"mask"
#define BanEntry_name @"name"
#define BanEntry_hash @"pb_hash"
#define BanEntry_reason @"reason"
#define BanEntry_start @"start"
#define BanEntry_duration @"duration"
@interface MPBanListBanEntry : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasName_:1;
  BOOL hasHash_:1;
  BOOL hasReason_:1;
  BOOL hasStart_:1;
  BOOL hasAddress_:1;
  BOOL hasMask_:1;
  BOOL hasDuration_:1;
  NSString* name;
  NSString* pb_hash;
  NSString* reason;
  NSString* start;
  NSData* address;
  UInt32 mask;
  UInt32 duration;
}
- (BOOL) hasAddress;
- (BOOL) hasMask;
- (BOOL) hasName;
- (BOOL) hasHash;
- (BOOL) hasReason;
- (BOOL) hasStart;
- (BOOL) hasDuration;
@property (readonly, strong) NSData* address;
@property (readonly) UInt32 mask;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* pb_hash;
@property (readonly, strong) NSString* reason;
@property (readonly, strong) NSString* start;
@property (readonly) UInt32 duration;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPBanListBanEntryBuilder*) builder;
+ (MPBanListBanEntryBuilder*) builder;
+ (MPBanListBanEntryBuilder*) builderWithPrototype:(MPBanListBanEntry*) prototype;
- (MPBanListBanEntryBuilder*) toBuilder;

+ (MPBanListBanEntry*) parseFromData:(NSData*) data;
+ (MPBanListBanEntry*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPBanListBanEntry*) parseFromInputStream:(NSInputStream*) input;
+ (MPBanListBanEntry*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPBanListBanEntry*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPBanListBanEntry*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPBanListBanEntryBuilder : PBGeneratedMessageBuilder {
@private
  MPBanListBanEntry* resultBanEntry;
}

- (MPBanListBanEntry*) defaultInstance;

- (MPBanListBanEntryBuilder*) clear;
- (MPBanListBanEntryBuilder*) clone;

- (MPBanListBanEntry*) build;
- (MPBanListBanEntry*) buildPartial;

- (MPBanListBanEntryBuilder*) mergeFrom:(MPBanListBanEntry*) other;
- (MPBanListBanEntryBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPBanListBanEntryBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAddress;
- (NSData*) address;
- (MPBanListBanEntryBuilder*) setAddress:(NSData*) value;
- (MPBanListBanEntryBuilder*) clearAddress;

- (BOOL) hasMask;
- (UInt32) mask;
- (MPBanListBanEntryBuilder*) setMask:(UInt32) value;
- (MPBanListBanEntryBuilder*) clearMask;

- (BOOL) hasName;
- (NSString*) name;
- (MPBanListBanEntryBuilder*) setName:(NSString*) value;
- (MPBanListBanEntryBuilder*) clearName;

- (BOOL) hasHash;
- (NSString*) pb_hash;
- (MPBanListBanEntryBuilder*) setHash:(NSString*) value;
- (MPBanListBanEntryBuilder*) clearHash;

- (BOOL) hasReason;
- (NSString*) reason;
- (MPBanListBanEntryBuilder*) setReason:(NSString*) value;
- (MPBanListBanEntryBuilder*) clearReason;

- (BOOL) hasStart;
- (NSString*) start;
- (MPBanListBanEntryBuilder*) setStart:(NSString*) value;
- (MPBanListBanEntryBuilder*) clearStart;

- (BOOL) hasDuration;
- (UInt32) duration;
- (MPBanListBanEntryBuilder*) setDuration:(UInt32) value;
- (MPBanListBanEntryBuilder*) clearDuration;
@end

@interface MPBanListBuilder : PBGeneratedMessageBuilder {
@private
  MPBanList* resultBanList;
}

- (MPBanList*) defaultInstance;

- (MPBanListBuilder*) clear;
- (MPBanListBuilder*) clone;

- (MPBanList*) build;
- (MPBanList*) buildPartial;

- (MPBanListBuilder*) mergeFrom:(MPBanList*) other;
- (MPBanListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPBanListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray<MPBanListBanEntry*> *)bans;
- (MPBanListBanEntry*)bansAtIndex:(NSUInteger)index;
- (MPBanListBuilder *)addBans:(MPBanListBanEntry*)value;
- (MPBanListBuilder *)setBansArray:(NSArray<MPBanListBanEntry*> *)array;
- (MPBanListBuilder *)clearBans;

- (BOOL) hasQuery;
- (BOOL) query;
- (MPBanListBuilder*) setQuery:(BOOL) value;
- (MPBanListBuilder*) clearQuery;
@end

#define TextMessage_actor @"actor"
#define TextMessage_session @"session"
#define TextMessage_channel_id @"channelId"
#define TextMessage_tree_id @"treeId"
#define TextMessage_message @"message"
@interface MPTextMessage : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasMessage_:1;
  BOOL hasActor_:1;
  NSString* message;
  UInt32 actor;
  PBAppendableArray * sessionArray;
  PBAppendableArray * channelIdArray;
  PBAppendableArray * treeIdArray;
}
- (BOOL) hasActor;
- (BOOL) hasMessage;
@property (readonly) UInt32 actor;
@property (readonly, strong) PBArray * session;
@property (readonly, strong) PBArray * channelId;
@property (readonly, strong) PBArray * treeId;
@property (readonly, strong) NSString* message;
- (UInt32)sessionAtIndex:(NSUInteger)index;
- (UInt32)channelIdAtIndex:(NSUInteger)index;
- (UInt32)treeIdAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPTextMessageBuilder*) builder;
+ (MPTextMessageBuilder*) builder;
+ (MPTextMessageBuilder*) builderWithPrototype:(MPTextMessage*) prototype;
- (MPTextMessageBuilder*) toBuilder;

+ (MPTextMessage*) parseFromData:(NSData*) data;
+ (MPTextMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPTextMessage*) parseFromInputStream:(NSInputStream*) input;
+ (MPTextMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPTextMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPTextMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPTextMessageBuilder : PBGeneratedMessageBuilder {
@private
  MPTextMessage* resultTextMessage;
}

- (MPTextMessage*) defaultInstance;

- (MPTextMessageBuilder*) clear;
- (MPTextMessageBuilder*) clone;

- (MPTextMessage*) build;
- (MPTextMessage*) buildPartial;

- (MPTextMessageBuilder*) mergeFrom:(MPTextMessage*) other;
- (MPTextMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPTextMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasActor;
- (UInt32) actor;
- (MPTextMessageBuilder*) setActor:(UInt32) value;
- (MPTextMessageBuilder*) clearActor;

- (PBAppendableArray *)session;
- (UInt32)sessionAtIndex:(NSUInteger)index;
- (MPTextMessageBuilder *)addSession:(UInt32)value;
- (MPTextMessageBuilder *)setSessionArray:(NSArray *)array;
- (MPTextMessageBuilder *)setSessionValues:(const UInt32 *)values count:(NSUInteger)count;
- (MPTextMessageBuilder *)clearSession;

- (PBAppendableArray *)channelId;
- (UInt32)channelIdAtIndex:(NSUInteger)index;
- (MPTextMessageBuilder *)addChannelId:(UInt32)value;
- (MPTextMessageBuilder *)setChannelIdArray:(NSArray *)array;
- (MPTextMessageBuilder *)setChannelIdValues:(const UInt32 *)values count:(NSUInteger)count;
- (MPTextMessageBuilder *)clearChannelId;

- (PBAppendableArray *)treeId;
- (UInt32)treeIdAtIndex:(NSUInteger)index;
- (MPTextMessageBuilder *)addTreeId:(UInt32)value;
- (MPTextMessageBuilder *)setTreeIdArray:(NSArray *)array;
- (MPTextMessageBuilder *)setTreeIdValues:(const UInt32 *)values count:(NSUInteger)count;
- (MPTextMessageBuilder *)clearTreeId;

- (BOOL) hasMessage;
- (NSString*) message;
- (MPTextMessageBuilder*) setMessage:(NSString*) value;
- (MPTextMessageBuilder*) clearMessage;
@end

#define PermissionDenied_permission @"permission"
#define PermissionDenied_channel_id @"channelId"
#define PermissionDenied_session @"session"
#define PermissionDenied_reason @"reason"
#define PermissionDenied_type @"type"
#define PermissionDenied_name @"name"
@interface MPPermissionDenied : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasReason_:1;
  BOOL hasName_:1;
  BOOL hasPermission_:1;
  BOOL hasChannelId_:1;
  BOOL hasSession_:1;
  BOOL hasType_:1;
  NSString* reason;
  NSString* name;
  UInt32 permission;
  UInt32 channelId;
  UInt32 session;
  MPPermissionDeniedDenyType type;
}
- (BOOL) hasPermission;
- (BOOL) hasChannelId;
- (BOOL) hasSession;
- (BOOL) hasReason;
- (BOOL) hasType;
- (BOOL) hasName;
@property (readonly) UInt32 permission;
@property (readonly) UInt32 channelId;
@property (readonly) UInt32 session;
@property (readonly, strong) NSString* reason;
@property (readonly) MPPermissionDeniedDenyType type;
@property (readonly, strong) NSString* name;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPPermissionDeniedBuilder*) builder;
+ (MPPermissionDeniedBuilder*) builder;
+ (MPPermissionDeniedBuilder*) builderWithPrototype:(MPPermissionDenied*) prototype;
- (MPPermissionDeniedBuilder*) toBuilder;

+ (MPPermissionDenied*) parseFromData:(NSData*) data;
+ (MPPermissionDenied*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPPermissionDenied*) parseFromInputStream:(NSInputStream*) input;
+ (MPPermissionDenied*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPPermissionDenied*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPPermissionDenied*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPPermissionDeniedBuilder : PBGeneratedMessageBuilder {
@private
  MPPermissionDenied* resultPermissionDenied;
}

- (MPPermissionDenied*) defaultInstance;

- (MPPermissionDeniedBuilder*) clear;
- (MPPermissionDeniedBuilder*) clone;

- (MPPermissionDenied*) build;
- (MPPermissionDenied*) buildPartial;

- (MPPermissionDeniedBuilder*) mergeFrom:(MPPermissionDenied*) other;
- (MPPermissionDeniedBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPPermissionDeniedBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPermission;
- (UInt32) permission;
- (MPPermissionDeniedBuilder*) setPermission:(UInt32) value;
- (MPPermissionDeniedBuilder*) clearPermission;

- (BOOL) hasChannelId;
- (UInt32) channelId;
- (MPPermissionDeniedBuilder*) setChannelId:(UInt32) value;
- (MPPermissionDeniedBuilder*) clearChannelId;

- (BOOL) hasSession;
- (UInt32) session;
- (MPPermissionDeniedBuilder*) setSession:(UInt32) value;
- (MPPermissionDeniedBuilder*) clearSession;

- (BOOL) hasReason;
- (NSString*) reason;
- (MPPermissionDeniedBuilder*) setReason:(NSString*) value;
- (MPPermissionDeniedBuilder*) clearReason;

- (BOOL) hasType;
- (MPPermissionDeniedDenyType) type;
- (MPPermissionDeniedBuilder*) setType:(MPPermissionDeniedDenyType) value;
- (MPPermissionDeniedBuilder*) clearType;

- (BOOL) hasName;
- (NSString*) name;
- (MPPermissionDeniedBuilder*) setName:(NSString*) value;
- (MPPermissionDeniedBuilder*) clearName;
@end

#define ACL_channel_id @"channelId"
#define ACL_inherit_acls @"inheritAcls"
#define ACL_groups @"groups"
#define ACL_acls @"acls"
#define ACL_query @"query"
@interface MPACL : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasInheritAcls_:1;
  BOOL hasQuery_:1;
  BOOL hasChannelId_:1;
  BOOL inheritAcls_:1;
  BOOL query_:1;
  UInt32 channelId;
  NSMutableArray * groupsArray;
  NSMutableArray * aclsArray;
}
- (BOOL) hasChannelId;
- (BOOL) hasInheritAcls;
- (BOOL) hasQuery;
@property (readonly) UInt32 channelId;
- (BOOL) inheritAcls;
@property (readonly, strong) NSArray<MPACLChanGroup*> * groups;
@property (readonly, strong) NSArray<MPACLChanACL*> * acls;
- (BOOL) query;
- (MPACLChanGroup*)groupsAtIndex:(NSUInteger)index;
- (MPACLChanACL*)aclsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPACLBuilder*) builder;
+ (MPACLBuilder*) builder;
+ (MPACLBuilder*) builderWithPrototype:(MPACL*) prototype;
- (MPACLBuilder*) toBuilder;

+ (MPACL*) parseFromData:(NSData*) data;
+ (MPACL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPACL*) parseFromInputStream:(NSInputStream*) input;
+ (MPACL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPACL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPACL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

#define ChanGroup_name @"name"
#define ChanGroup_inherited @"inherited"
#define ChanGroup_inherit @"inherit"
#define ChanGroup_inheritable @"inheritable"
#define ChanGroup_add @"add"
#define ChanGroup_remove @"remove"
#define ChanGroup_inherited_members @"inheritedMembers"
@interface MPACLChanGroup : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasInherited_:1;
  BOOL hasInherit_:1;
  BOOL hasInheritable_:1;
  BOOL hasName_:1;
  BOOL inherited_:1;
  BOOL inherit_:1;
  BOOL inheritable_:1;
  NSString* name;
  PBAppendableArray * addArray;
  PBAppendableArray * removeArray;
  PBAppendableArray * inheritedMembersArray;
}
- (BOOL) hasName;
- (BOOL) hasInherited;
- (BOOL) hasInherit;
- (BOOL) hasInheritable;
@property (readonly, strong) NSString* name;
- (BOOL) inherited;
- (BOOL) inherit;
- (BOOL) inheritable;
@property (readonly, strong) PBArray * add;
@property (readonly, strong) PBArray * remove;
@property (readonly, strong) PBArray * inheritedMembers;
- (UInt32)addAtIndex:(NSUInteger)index;
- (UInt32)removeAtIndex:(NSUInteger)index;
- (UInt32)inheritedMembersAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPACLChanGroupBuilder*) builder;
+ (MPACLChanGroupBuilder*) builder;
+ (MPACLChanGroupBuilder*) builderWithPrototype:(MPACLChanGroup*) prototype;
- (MPACLChanGroupBuilder*) toBuilder;

+ (MPACLChanGroup*) parseFromData:(NSData*) data;
+ (MPACLChanGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPACLChanGroup*) parseFromInputStream:(NSInputStream*) input;
+ (MPACLChanGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPACLChanGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPACLChanGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPACLChanGroupBuilder : PBGeneratedMessageBuilder {
@private
  MPACLChanGroup* resultChanGroup;
}

- (MPACLChanGroup*) defaultInstance;

- (MPACLChanGroupBuilder*) clear;
- (MPACLChanGroupBuilder*) clone;

- (MPACLChanGroup*) build;
- (MPACLChanGroup*) buildPartial;

- (MPACLChanGroupBuilder*) mergeFrom:(MPACLChanGroup*) other;
- (MPACLChanGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPACLChanGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasName;
- (NSString*) name;
- (MPACLChanGroupBuilder*) setName:(NSString*) value;
- (MPACLChanGroupBuilder*) clearName;

- (BOOL) hasInherited;
- (BOOL) inherited;
- (MPACLChanGroupBuilder*) setInherited:(BOOL) value;
- (MPACLChanGroupBuilder*) clearInherited;

- (BOOL) hasInherit;
- (BOOL) inherit;
- (MPACLChanGroupBuilder*) setInherit:(BOOL) value;
- (MPACLChanGroupBuilder*) clearInherit;

- (BOOL) hasInheritable;
- (BOOL) inheritable;
- (MPACLChanGroupBuilder*) setInheritable:(BOOL) value;
- (MPACLChanGroupBuilder*) clearInheritable;

- (PBAppendableArray *)add;
- (UInt32)addAtIndex:(NSUInteger)index;
- (MPACLChanGroupBuilder *)addAdd:(UInt32)value;
- (MPACLChanGroupBuilder *)setAddArray:(NSArray *)array;
- (MPACLChanGroupBuilder *)setAddValues:(const UInt32 *)values count:(NSUInteger)count;
- (MPACLChanGroupBuilder *)clearAdd;

- (PBAppendableArray *)remove;
- (UInt32)removeAtIndex:(NSUInteger)index;
- (MPACLChanGroupBuilder *)addRemove:(UInt32)value;
- (MPACLChanGroupBuilder *)setRemoveArray:(NSArray *)array;
- (MPACLChanGroupBuilder *)setRemoveValues:(const UInt32 *)values count:(NSUInteger)count;
- (MPACLChanGroupBuilder *)clearRemove;

- (PBAppendableArray *)inheritedMembers;
- (UInt32)inheritedMembersAtIndex:(NSUInteger)index;
- (MPACLChanGroupBuilder *)addInheritedMembers:(UInt32)value;
- (MPACLChanGroupBuilder *)setInheritedMembersArray:(NSArray *)array;
- (MPACLChanGroupBuilder *)setInheritedMembersValues:(const UInt32 *)values count:(NSUInteger)count;
- (MPACLChanGroupBuilder *)clearInheritedMembers;
@end

#define ChanACL_apply_here @"applyHere"
#define ChanACL_apply_subs @"applySubs"
#define ChanACL_inherited @"inherited"
#define ChanACL_user_id @"userId"
#define ChanACL_group @"group"
#define ChanACL_grant @"grant"
#define ChanACL_deny @"deny"
@interface MPACLChanACL : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasApplyHere_:1;
  BOOL hasApplySubs_:1;
  BOOL hasInherited_:1;
  BOOL hasGroup_:1;
  BOOL hasUserId_:1;
  BOOL hasGrant_:1;
  BOOL hasDeny_:1;
  BOOL applyHere_:1;
  BOOL applySubs_:1;
  BOOL inherited_:1;
  NSString* group;
  UInt32 userId;
  UInt32 grant;
  UInt32 deny;
}
- (BOOL) hasApplyHere;
- (BOOL) hasApplySubs;
- (BOOL) hasInherited;
- (BOOL) hasUserId;
- (BOOL) hasGroup;
- (BOOL) hasGrant;
- (BOOL) hasDeny;
- (BOOL) applyHere;
- (BOOL) applySubs;
- (BOOL) inherited;
@property (readonly) UInt32 userId;
@property (readonly, strong) NSString* group;
@property (readonly) UInt32 grant;
@property (readonly) UInt32 deny;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPACLChanACLBuilder*) builder;
+ (MPACLChanACLBuilder*) builder;
+ (MPACLChanACLBuilder*) builderWithPrototype:(MPACLChanACL*) prototype;
- (MPACLChanACLBuilder*) toBuilder;

+ (MPACLChanACL*) parseFromData:(NSData*) data;
+ (MPACLChanACL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPACLChanACL*) parseFromInputStream:(NSInputStream*) input;
+ (MPACLChanACL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPACLChanACL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPACLChanACL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPACLChanACLBuilder : PBGeneratedMessageBuilder {
@private
  MPACLChanACL* resultChanAcl;
}

- (MPACLChanACL*) defaultInstance;

- (MPACLChanACLBuilder*) clear;
- (MPACLChanACLBuilder*) clone;

- (MPACLChanACL*) build;
- (MPACLChanACL*) buildPartial;

- (MPACLChanACLBuilder*) mergeFrom:(MPACLChanACL*) other;
- (MPACLChanACLBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPACLChanACLBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasApplyHere;
- (BOOL) applyHere;
- (MPACLChanACLBuilder*) setApplyHere:(BOOL) value;
- (MPACLChanACLBuilder*) clearApplyHere;

- (BOOL) hasApplySubs;
- (BOOL) applySubs;
- (MPACLChanACLBuilder*) setApplySubs:(BOOL) value;
- (MPACLChanACLBuilder*) clearApplySubs;

- (BOOL) hasInherited;
- (BOOL) inherited;
- (MPACLChanACLBuilder*) setInherited:(BOOL) value;
- (MPACLChanACLBuilder*) clearInherited;

- (BOOL) hasUserId;
- (UInt32) userId;
- (MPACLChanACLBuilder*) setUserId:(UInt32) value;
- (MPACLChanACLBuilder*) clearUserId;

- (BOOL) hasGroup;
- (NSString*) group;
- (MPACLChanACLBuilder*) setGroup:(NSString*) value;
- (MPACLChanACLBuilder*) clearGroup;

- (BOOL) hasGrant;
- (UInt32) grant;
- (MPACLChanACLBuilder*) setGrant:(UInt32) value;
- (MPACLChanACLBuilder*) clearGrant;

- (BOOL) hasDeny;
- (UInt32) deny;
- (MPACLChanACLBuilder*) setDeny:(UInt32) value;
- (MPACLChanACLBuilder*) clearDeny;
@end

@interface MPACLBuilder : PBGeneratedMessageBuilder {
@private
  MPACL* resultAcl;
}

- (MPACL*) defaultInstance;

- (MPACLBuilder*) clear;
- (MPACLBuilder*) clone;

- (MPACL*) build;
- (MPACL*) buildPartial;

- (MPACLBuilder*) mergeFrom:(MPACL*) other;
- (MPACLBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPACLBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChannelId;
- (UInt32) channelId;
- (MPACLBuilder*) setChannelId:(UInt32) value;
- (MPACLBuilder*) clearChannelId;

- (BOOL) hasInheritAcls;
- (BOOL) inheritAcls;
- (MPACLBuilder*) setInheritAcls:(BOOL) value;
- (MPACLBuilder*) clearInheritAcls;

- (NSMutableArray<MPACLChanGroup*> *)groups;
- (MPACLChanGroup*)groupsAtIndex:(NSUInteger)index;
- (MPACLBuilder *)addGroups:(MPACLChanGroup*)value;
- (MPACLBuilder *)setGroupsArray:(NSArray<MPACLChanGroup*> *)array;
- (MPACLBuilder *)clearGroups;

- (NSMutableArray<MPACLChanACL*> *)acls;
- (MPACLChanACL*)aclsAtIndex:(NSUInteger)index;
- (MPACLBuilder *)addAcls:(MPACLChanACL*)value;
- (MPACLBuilder *)setAclsArray:(NSArray<MPACLChanACL*> *)array;
- (MPACLBuilder *)clearAcls;

- (BOOL) hasQuery;
- (BOOL) query;
- (MPACLBuilder*) setQuery:(BOOL) value;
- (MPACLBuilder*) clearQuery;
@end

#define QueryUsers_ids @"ids"
#define QueryUsers_names @"names"
@interface MPQueryUsers : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  NSMutableArray * namesArray;
  PBAppendableArray * idsArray;
}
@property (readonly, strong) PBArray * ids;
@property (readonly, strong) NSArray * names;
- (UInt32)idsAtIndex:(NSUInteger)index;
- (NSString*)namesAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPQueryUsersBuilder*) builder;
+ (MPQueryUsersBuilder*) builder;
+ (MPQueryUsersBuilder*) builderWithPrototype:(MPQueryUsers*) prototype;
- (MPQueryUsersBuilder*) toBuilder;

+ (MPQueryUsers*) parseFromData:(NSData*) data;
+ (MPQueryUsers*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPQueryUsers*) parseFromInputStream:(NSInputStream*) input;
+ (MPQueryUsers*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPQueryUsers*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPQueryUsers*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPQueryUsersBuilder : PBGeneratedMessageBuilder {
@private
  MPQueryUsers* resultQueryUsers;
}

- (MPQueryUsers*) defaultInstance;

- (MPQueryUsersBuilder*) clear;
- (MPQueryUsersBuilder*) clone;

- (MPQueryUsers*) build;
- (MPQueryUsers*) buildPartial;

- (MPQueryUsersBuilder*) mergeFrom:(MPQueryUsers*) other;
- (MPQueryUsersBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPQueryUsersBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)ids;
- (UInt32)idsAtIndex:(NSUInteger)index;
- (MPQueryUsersBuilder *)addIds:(UInt32)value;
- (MPQueryUsersBuilder *)setIdsArray:(NSArray *)array;
- (MPQueryUsersBuilder *)setIdsValues:(const UInt32 *)values count:(NSUInteger)count;
- (MPQueryUsersBuilder *)clearIds;

- (NSMutableArray *)names;
- (NSString*)namesAtIndex:(NSUInteger)index;
- (MPQueryUsersBuilder *)addNames:(NSString*)value;
- (MPQueryUsersBuilder *)setNamesArray:(NSArray *)array;
- (MPQueryUsersBuilder *)clearNames;
@end

#define CryptSetup_key @"key"
#define CryptSetup_client_nonce @"clientNonce"
#define CryptSetup_server_nonce @"serverNonce"
@interface MPCryptSetup : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasKey_:1;
  BOOL hasClientNonce_:1;
  BOOL hasServerNonce_:1;
  NSData* key;
  NSData* clientNonce;
  NSData* serverNonce;
}
- (BOOL) hasKey;
- (BOOL) hasClientNonce;
- (BOOL) hasServerNonce;
@property (readonly, strong) NSData* key;
@property (readonly, strong) NSData* clientNonce;
@property (readonly, strong) NSData* serverNonce;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPCryptSetupBuilder*) builder;
+ (MPCryptSetupBuilder*) builder;
+ (MPCryptSetupBuilder*) builderWithPrototype:(MPCryptSetup*) prototype;
- (MPCryptSetupBuilder*) toBuilder;

+ (MPCryptSetup*) parseFromData:(NSData*) data;
+ (MPCryptSetup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPCryptSetup*) parseFromInputStream:(NSInputStream*) input;
+ (MPCryptSetup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPCryptSetup*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPCryptSetup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPCryptSetupBuilder : PBGeneratedMessageBuilder {
@private
  MPCryptSetup* resultCryptSetup;
}

- (MPCryptSetup*) defaultInstance;

- (MPCryptSetupBuilder*) clear;
- (MPCryptSetupBuilder*) clone;

- (MPCryptSetup*) build;
- (MPCryptSetup*) buildPartial;

- (MPCryptSetupBuilder*) mergeFrom:(MPCryptSetup*) other;
- (MPCryptSetupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPCryptSetupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasKey;
- (NSData*) key;
- (MPCryptSetupBuilder*) setKey:(NSData*) value;
- (MPCryptSetupBuilder*) clearKey;

- (BOOL) hasClientNonce;
- (NSData*) clientNonce;
- (MPCryptSetupBuilder*) setClientNonce:(NSData*) value;
- (MPCryptSetupBuilder*) clearClientNonce;

- (BOOL) hasServerNonce;
- (NSData*) serverNonce;
- (MPCryptSetupBuilder*) setServerNonce:(NSData*) value;
- (MPCryptSetupBuilder*) clearServerNonce;
@end

#define ContextActionModify_action @"action"
#define ContextActionModify_text @"text"
#define ContextActionModify_context @"context"
#define ContextActionModify_operation @"operation"
@interface MPContextActionModify : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasAction_:1;
  BOOL hasText_:1;
  BOOL hasContext_:1;
  BOOL hasOperation_:1;
  NSString* action;
  NSString* text;
  UInt32 context;
  MPContextActionModifyOperation operation;
}
- (BOOL) hasAction;
- (BOOL) hasText;
- (BOOL) hasContext;
- (BOOL) hasOperation;
@property (readonly, strong) NSString* action;
@property (readonly, strong) NSString* text;
@property (readonly) UInt32 context;
@property (readonly) MPContextActionModifyOperation operation;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPContextActionModifyBuilder*) builder;
+ (MPContextActionModifyBuilder*) builder;
+ (MPContextActionModifyBuilder*) builderWithPrototype:(MPContextActionModify*) prototype;
- (MPContextActionModifyBuilder*) toBuilder;

+ (MPContextActionModify*) parseFromData:(NSData*) data;
+ (MPContextActionModify*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPContextActionModify*) parseFromInputStream:(NSInputStream*) input;
+ (MPContextActionModify*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPContextActionModify*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPContextActionModify*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPContextActionModifyBuilder : PBGeneratedMessageBuilder {
@private
  MPContextActionModify* resultContextActionModify;
}

- (MPContextActionModify*) defaultInstance;

- (MPContextActionModifyBuilder*) clear;
- (MPContextActionModifyBuilder*) clone;

- (MPContextActionModify*) build;
- (MPContextActionModify*) buildPartial;

- (MPContextActionModifyBuilder*) mergeFrom:(MPContextActionModify*) other;
- (MPContextActionModifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPContextActionModifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAction;
- (NSString*) action;
- (MPContextActionModifyBuilder*) setAction:(NSString*) value;
- (MPContextActionModifyBuilder*) clearAction;

- (BOOL) hasText;
- (NSString*) text;
- (MPContextActionModifyBuilder*) setText:(NSString*) value;
- (MPContextActionModifyBuilder*) clearText;

- (BOOL) hasContext;
- (UInt32) context;
- (MPContextActionModifyBuilder*) setContext:(UInt32) value;
- (MPContextActionModifyBuilder*) clearContext;

- (BOOL) hasOperation;
- (MPContextActionModifyOperation) operation;
- (MPContextActionModifyBuilder*) setOperation:(MPContextActionModifyOperation) value;
- (MPContextActionModifyBuilder*) clearOperation;
@end

#define ContextAction_session @"session"
#define ContextAction_channel_id @"channelId"
#define ContextAction_action @"action"
@interface MPContextAction : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasAction_:1;
  BOOL hasSession_:1;
  BOOL hasChannelId_:1;
  NSString* action;
  UInt32 session;
  UInt32 channelId;
}
- (BOOL) hasSession;
- (BOOL) hasChannelId;
- (BOOL) hasAction;
@property (readonly) UInt32 session;
@property (readonly) UInt32 channelId;
@property (readonly, strong) NSString* action;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPContextActionBuilder*) builder;
+ (MPContextActionBuilder*) builder;
+ (MPContextActionBuilder*) builderWithPrototype:(MPContextAction*) prototype;
- (MPContextActionBuilder*) toBuilder;

+ (MPContextAction*) parseFromData:(NSData*) data;
+ (MPContextAction*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPContextAction*) parseFromInputStream:(NSInputStream*) input;
+ (MPContextAction*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPContextAction*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPContextAction*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPContextActionBuilder : PBGeneratedMessageBuilder {
@private
  MPContextAction* resultContextAction;
}

- (MPContextAction*) defaultInstance;

- (MPContextActionBuilder*) clear;
- (MPContextActionBuilder*) clone;

- (MPContextAction*) build;
- (MPContextAction*) buildPartial;

- (MPContextActionBuilder*) mergeFrom:(MPContextAction*) other;
- (MPContextActionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPContextActionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSession;
- (UInt32) session;
- (MPContextActionBuilder*) setSession:(UInt32) value;
- (MPContextActionBuilder*) clearSession;

- (BOOL) hasChannelId;
- (UInt32) channelId;
- (MPContextActionBuilder*) setChannelId:(UInt32) value;
- (MPContextActionBuilder*) clearChannelId;

- (BOOL) hasAction;
- (NSString*) action;
- (MPContextActionBuilder*) setAction:(NSString*) value;
- (MPContextActionBuilder*) clearAction;
@end

#define UserList_users @"users"
@interface MPUserList : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  NSMutableArray * usersArray;
}
@property (readonly, strong) NSArray<MPUserListUser*> * users;
- (MPUserListUser*)usersAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPUserListBuilder*) builder;
+ (MPUserListBuilder*) builder;
+ (MPUserListBuilder*) builderWithPrototype:(MPUserList*) prototype;
- (MPUserListBuilder*) toBuilder;

+ (MPUserList*) parseFromData:(NSData*) data;
+ (MPUserList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPUserList*) parseFromInputStream:(NSInputStream*) input;
+ (MPUserList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPUserList*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPUserList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

#define User_user_id @"userId"
#define User_name @"name"
#define User_last_seen @"lastSeen"
#define User_last_channel @"lastChannel"
@interface MPUserListUser : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasName_:1;
  BOOL hasLastSeen_:1;
  BOOL hasUserId_:1;
  BOOL hasLastChannel_:1;
  NSString* name;
  NSString* lastSeen;
  UInt32 userId;
  UInt32 lastChannel;
}
- (BOOL) hasUserId;
- (BOOL) hasName;
- (BOOL) hasLastSeen;
- (BOOL) hasLastChannel;
@property (readonly) UInt32 userId;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* lastSeen;
@property (readonly) UInt32 lastChannel;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPUserListUserBuilder*) builder;
+ (MPUserListUserBuilder*) builder;
+ (MPUserListUserBuilder*) builderWithPrototype:(MPUserListUser*) prototype;
- (MPUserListUserBuilder*) toBuilder;

+ (MPUserListUser*) parseFromData:(NSData*) data;
+ (MPUserListUser*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPUserListUser*) parseFromInputStream:(NSInputStream*) input;
+ (MPUserListUser*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPUserListUser*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPUserListUser*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPUserListUserBuilder : PBGeneratedMessageBuilder {
@private
  MPUserListUser* resultUser;
}

- (MPUserListUser*) defaultInstance;

- (MPUserListUserBuilder*) clear;
- (MPUserListUserBuilder*) clone;

- (MPUserListUser*) build;
- (MPUserListUser*) buildPartial;

- (MPUserListUserBuilder*) mergeFrom:(MPUserListUser*) other;
- (MPUserListUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPUserListUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (UInt32) userId;
- (MPUserListUserBuilder*) setUserId:(UInt32) value;
- (MPUserListUserBuilder*) clearUserId;

- (BOOL) hasName;
- (NSString*) name;
- (MPUserListUserBuilder*) setName:(NSString*) value;
- (MPUserListUserBuilder*) clearName;

- (BOOL) hasLastSeen;
- (NSString*) lastSeen;
- (MPUserListUserBuilder*) setLastSeen:(NSString*) value;
- (MPUserListUserBuilder*) clearLastSeen;

- (BOOL) hasLastChannel;
- (UInt32) lastChannel;
- (MPUserListUserBuilder*) setLastChannel:(UInt32) value;
- (MPUserListUserBuilder*) clearLastChannel;
@end

@interface MPUserListBuilder : PBGeneratedMessageBuilder {
@private
  MPUserList* resultUserList;
}

- (MPUserList*) defaultInstance;

- (MPUserListBuilder*) clear;
- (MPUserListBuilder*) clone;

- (MPUserList*) build;
- (MPUserList*) buildPartial;

- (MPUserListBuilder*) mergeFrom:(MPUserList*) other;
- (MPUserListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPUserListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray<MPUserListUser*> *)users;
- (MPUserListUser*)usersAtIndex:(NSUInteger)index;
- (MPUserListBuilder *)addUsers:(MPUserListUser*)value;
- (MPUserListBuilder *)setUsersArray:(NSArray<MPUserListUser*> *)array;
- (MPUserListBuilder *)clearUsers;
@end

#define VoiceTarget_id @"id"
#define VoiceTarget_targets @"targets"
@interface MPVoiceTarget : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasId_:1;
  UInt32 id;
  NSMutableArray * targetsArray;
}
- (BOOL) hasId;
@property (readonly) UInt32 id;
@property (readonly, strong) NSArray<MPVoiceTargetTarget*> * targets;
- (MPVoiceTargetTarget*)targetsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPVoiceTargetBuilder*) builder;
+ (MPVoiceTargetBuilder*) builder;
+ (MPVoiceTargetBuilder*) builderWithPrototype:(MPVoiceTarget*) prototype;
- (MPVoiceTargetBuilder*) toBuilder;

+ (MPVoiceTarget*) parseFromData:(NSData*) data;
+ (MPVoiceTarget*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPVoiceTarget*) parseFromInputStream:(NSInputStream*) input;
+ (MPVoiceTarget*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPVoiceTarget*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPVoiceTarget*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

#define Target_session @"session"
#define Target_channel_id @"channelId"
#define Target_group @"group"
#define Target_links @"links"
#define Target_children @"children"
@interface MPVoiceTargetTarget : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasLinks_:1;
  BOOL hasChildren_:1;
  BOOL hasGroup_:1;
  BOOL hasChannelId_:1;
  BOOL links_:1;
  BOOL children_:1;
  NSString* group;
  UInt32 channelId;
  PBAppendableArray * sessionArray;
}
- (BOOL) hasChannelId;
- (BOOL) hasGroup;
- (BOOL) hasLinks;
- (BOOL) hasChildren;
@property (readonly, strong) PBArray * session;
@property (readonly) UInt32 channelId;
@property (readonly, strong) NSString* group;
- (BOOL) links;
- (BOOL) children;
- (UInt32)sessionAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPVoiceTargetTargetBuilder*) builder;
+ (MPVoiceTargetTargetBuilder*) builder;
+ (MPVoiceTargetTargetBuilder*) builderWithPrototype:(MPVoiceTargetTarget*) prototype;
- (MPVoiceTargetTargetBuilder*) toBuilder;

+ (MPVoiceTargetTarget*) parseFromData:(NSData*) data;
+ (MPVoiceTargetTarget*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPVoiceTargetTarget*) parseFromInputStream:(NSInputStream*) input;
+ (MPVoiceTargetTarget*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPVoiceTargetTarget*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPVoiceTargetTarget*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPVoiceTargetTargetBuilder : PBGeneratedMessageBuilder {
@private
  MPVoiceTargetTarget* resultTarget;
}

- (MPVoiceTargetTarget*) defaultInstance;

- (MPVoiceTargetTargetBuilder*) clear;
- (MPVoiceTargetTargetBuilder*) clone;

- (MPVoiceTargetTarget*) build;
- (MPVoiceTargetTarget*) buildPartial;

- (MPVoiceTargetTargetBuilder*) mergeFrom:(MPVoiceTargetTarget*) other;
- (MPVoiceTargetTargetBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPVoiceTargetTargetBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)session;
- (UInt32)sessionAtIndex:(NSUInteger)index;
- (MPVoiceTargetTargetBuilder *)addSession:(UInt32)value;
- (MPVoiceTargetTargetBuilder *)setSessionArray:(NSArray *)array;
- (MPVoiceTargetTargetBuilder *)setSessionValues:(const UInt32 *)values count:(NSUInteger)count;
- (MPVoiceTargetTargetBuilder *)clearSession;

- (BOOL) hasChannelId;
- (UInt32) channelId;
- (MPVoiceTargetTargetBuilder*) setChannelId:(UInt32) value;
- (MPVoiceTargetTargetBuilder*) clearChannelId;

- (BOOL) hasGroup;
- (NSString*) group;
- (MPVoiceTargetTargetBuilder*) setGroup:(NSString*) value;
- (MPVoiceTargetTargetBuilder*) clearGroup;

- (BOOL) hasLinks;
- (BOOL) links;
- (MPVoiceTargetTargetBuilder*) setLinks:(BOOL) value;
- (MPVoiceTargetTargetBuilder*) clearLinks;

- (BOOL) hasChildren;
- (BOOL) children;
- (MPVoiceTargetTargetBuilder*) setChildren:(BOOL) value;
- (MPVoiceTargetTargetBuilder*) clearChildren;
@end

@interface MPVoiceTargetBuilder : PBGeneratedMessageBuilder {
@private
  MPVoiceTarget* resultVoiceTarget;
}

- (MPVoiceTarget*) defaultInstance;

- (MPVoiceTargetBuilder*) clear;
- (MPVoiceTargetBuilder*) clone;

- (MPVoiceTarget*) build;
- (MPVoiceTarget*) buildPartial;

- (MPVoiceTargetBuilder*) mergeFrom:(MPVoiceTarget*) other;
- (MPVoiceTargetBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPVoiceTargetBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (UInt32) id;
- (MPVoiceTargetBuilder*) setId:(UInt32) value;
- (MPVoiceTargetBuilder*) clearId;

- (NSMutableArray<MPVoiceTargetTarget*> *)targets;
- (MPVoiceTargetTarget*)targetsAtIndex:(NSUInteger)index;
- (MPVoiceTargetBuilder *)addTargets:(MPVoiceTargetTarget*)value;
- (MPVoiceTargetBuilder *)setTargetsArray:(NSArray<MPVoiceTargetTarget*> *)array;
- (MPVoiceTargetBuilder *)clearTargets;
@end

#define PermissionQuery_channel_id @"channelId"
#define PermissionQuery_permissions @"permissions"
#define PermissionQuery_flush @"flush"
@interface MPPermissionQuery : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasFlush_:1;
  BOOL hasChannelId_:1;
  BOOL hasPermissions_:1;
  BOOL flush_:1;
  UInt32 channelId;
  UInt32 permissions;
}
- (BOOL) hasChannelId;
- (BOOL) hasPermissions;
- (BOOL) hasFlush;
@property (readonly) UInt32 channelId;
@property (readonly) UInt32 permissions;
- (BOOL) flush;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPPermissionQueryBuilder*) builder;
+ (MPPermissionQueryBuilder*) builder;
+ (MPPermissionQueryBuilder*) builderWithPrototype:(MPPermissionQuery*) prototype;
- (MPPermissionQueryBuilder*) toBuilder;

+ (MPPermissionQuery*) parseFromData:(NSData*) data;
+ (MPPermissionQuery*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPPermissionQuery*) parseFromInputStream:(NSInputStream*) input;
+ (MPPermissionQuery*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPPermissionQuery*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPPermissionQuery*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPPermissionQueryBuilder : PBGeneratedMessageBuilder {
@private
  MPPermissionQuery* resultPermissionQuery;
}

- (MPPermissionQuery*) defaultInstance;

- (MPPermissionQueryBuilder*) clear;
- (MPPermissionQueryBuilder*) clone;

- (MPPermissionQuery*) build;
- (MPPermissionQuery*) buildPartial;

- (MPPermissionQueryBuilder*) mergeFrom:(MPPermissionQuery*) other;
- (MPPermissionQueryBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPPermissionQueryBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChannelId;
- (UInt32) channelId;
- (MPPermissionQueryBuilder*) setChannelId:(UInt32) value;
- (MPPermissionQueryBuilder*) clearChannelId;

- (BOOL) hasPermissions;
- (UInt32) permissions;
- (MPPermissionQueryBuilder*) setPermissions:(UInt32) value;
- (MPPermissionQueryBuilder*) clearPermissions;

- (BOOL) hasFlush;
- (BOOL) flush;
- (MPPermissionQueryBuilder*) setFlush:(BOOL) value;
- (MPPermissionQueryBuilder*) clearFlush;
@end

#define CodecVersion_alpha @"alpha"
#define CodecVersion_beta @"beta"
#define CodecVersion_prefer_alpha @"preferAlpha"
#define CodecVersion_opus @"opus"
@interface MPCodecVersion : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPreferAlpha_:1;
  BOOL hasOpus_:1;
  BOOL hasAlpha_:1;
  BOOL hasBeta_:1;
  BOOL preferAlpha_:1;
  BOOL opus_:1;
  SInt32 alpha;
  SInt32 beta;
}
- (BOOL) hasAlpha;
- (BOOL) hasBeta;
- (BOOL) hasPreferAlpha;
- (BOOL) hasOpus;
@property (readonly) SInt32 alpha;
@property (readonly) SInt32 beta;
- (BOOL) preferAlpha;
- (BOOL) opus;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPCodecVersionBuilder*) builder;
+ (MPCodecVersionBuilder*) builder;
+ (MPCodecVersionBuilder*) builderWithPrototype:(MPCodecVersion*) prototype;
- (MPCodecVersionBuilder*) toBuilder;

+ (MPCodecVersion*) parseFromData:(NSData*) data;
+ (MPCodecVersion*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPCodecVersion*) parseFromInputStream:(NSInputStream*) input;
+ (MPCodecVersion*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPCodecVersion*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPCodecVersion*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPCodecVersionBuilder : PBGeneratedMessageBuilder {
@private
  MPCodecVersion* resultCodecVersion;
}

- (MPCodecVersion*) defaultInstance;

- (MPCodecVersionBuilder*) clear;
- (MPCodecVersionBuilder*) clone;

- (MPCodecVersion*) build;
- (MPCodecVersion*) buildPartial;

- (MPCodecVersionBuilder*) mergeFrom:(MPCodecVersion*) other;
- (MPCodecVersionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPCodecVersionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAlpha;
- (SInt32) alpha;
- (MPCodecVersionBuilder*) setAlpha:(SInt32) value;
- (MPCodecVersionBuilder*) clearAlpha;

- (BOOL) hasBeta;
- (SInt32) beta;
- (MPCodecVersionBuilder*) setBeta:(SInt32) value;
- (MPCodecVersionBuilder*) clearBeta;

- (BOOL) hasPreferAlpha;
- (BOOL) preferAlpha;
- (MPCodecVersionBuilder*) setPreferAlpha:(BOOL) value;
- (MPCodecVersionBuilder*) clearPreferAlpha;

- (BOOL) hasOpus;
- (BOOL) opus;
- (MPCodecVersionBuilder*) setOpus:(BOOL) value;
- (MPCodecVersionBuilder*) clearOpus;
@end

#define UserStats_session @"session"
#define UserStats_stats_only @"statsOnly"
#define UserStats_certificates @"certificates"
#define UserStats_from_client @"fromClient"
#define UserStats_from_server @"fromServer"
#define UserStats_udp_packets @"udpPackets"
#define UserStats_tcp_packets @"tcpPackets"
#define UserStats_udp_ping_avg @"udpPingAvg"
#define UserStats_udp_ping_var @"udpPingVar"
#define UserStats_tcp_ping_avg @"tcpPingAvg"
#define UserStats_tcp_ping_var @"tcpPingVar"
#define UserStats_version @"version"
#define UserStats_celt_versions @"celtVersions"
#define UserStats_address @"address"
#define UserStats_bandwidth @"bandwidth"
#define UserStats_onlinesecs @"onlinesecs"
#define UserStats_idlesecs @"idlesecs"
#define UserStats_strong_certificate @"strongCertificate"
#define UserStats_opus @"opus"
@interface MPUserStats : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasStatsOnly_:1;
  BOOL hasStrongCertificate_:1;
  BOOL hasOpus_:1;
  BOOL hasUdpPingAvg_:1;
  BOOL hasUdpPingVar_:1;
  BOOL hasTcpPingAvg_:1;
  BOOL hasTcpPingVar_:1;
  BOOL hasFromClient_:1;
  BOOL hasFromServer_:1;
  BOOL hasVersion_:1;
  BOOL hasAddress_:1;
  BOOL hasSession_:1;
  BOOL hasUdpPackets_:1;
  BOOL hasTcpPackets_:1;
  BOOL hasBandwidth_:1;
  BOOL hasOnlinesecs_:1;
  BOOL hasIdlesecs_:1;
  BOOL statsOnly_:1;
  BOOL strongCertificate_:1;
  BOOL opus_:1;
  Float32 udpPingAvg;
  Float32 udpPingVar;
  Float32 tcpPingAvg;
  Float32 tcpPingVar;
  MPUserStatsStats* fromClient;
  MPUserStatsStats* fromServer;
  MPVersion* version;
  NSData* address;
  UInt32 session;
  UInt32 udpPackets;
  UInt32 tcpPackets;
  UInt32 bandwidth;
  UInt32 onlinesecs;
  UInt32 idlesecs;
  PBAppendableArray * celtVersionsArray;
  NSMutableArray * certificatesArray;
}
- (BOOL) hasSession;
- (BOOL) hasStatsOnly;
- (BOOL) hasFromClient;
- (BOOL) hasFromServer;
- (BOOL) hasUdpPackets;
- (BOOL) hasTcpPackets;
- (BOOL) hasUdpPingAvg;
- (BOOL) hasUdpPingVar;
- (BOOL) hasTcpPingAvg;
- (BOOL) hasTcpPingVar;
- (BOOL) hasVersion;
- (BOOL) hasAddress;
- (BOOL) hasBandwidth;
- (BOOL) hasOnlinesecs;
- (BOOL) hasIdlesecs;
- (BOOL) hasStrongCertificate;
- (BOOL) hasOpus;
@property (readonly) UInt32 session;
- (BOOL) statsOnly;
@property (readonly, strong) NSArray * certificates;
@property (readonly, strong) MPUserStatsStats* fromClient;
@property (readonly, strong) MPUserStatsStats* fromServer;
@property (readonly) UInt32 udpPackets;
@property (readonly) UInt32 tcpPackets;
@property (readonly) Float32 udpPingAvg;
@property (readonly) Float32 udpPingVar;
@property (readonly) Float32 tcpPingAvg;
@property (readonly) Float32 tcpPingVar;
@property (readonly, strong) MPVersion* version;
@property (readonly, strong) PBArray * celtVersions;
@property (readonly, strong) NSData* address;
@property (readonly) UInt32 bandwidth;
@property (readonly) UInt32 onlinesecs;
@property (readonly) UInt32 idlesecs;
- (BOOL) strongCertificate;
- (BOOL) opus;
- (NSData*)certificatesAtIndex:(NSUInteger)index;
- (SInt32)celtVersionsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPUserStatsBuilder*) builder;
+ (MPUserStatsBuilder*) builder;
+ (MPUserStatsBuilder*) builderWithPrototype:(MPUserStats*) prototype;
- (MPUserStatsBuilder*) toBuilder;

+ (MPUserStats*) parseFromData:(NSData*) data;
+ (MPUserStats*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPUserStats*) parseFromInputStream:(NSInputStream*) input;
+ (MPUserStats*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPUserStats*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPUserStats*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

#define Stats_good @"good"
#define Stats_late @"late"
#define Stats_lost @"lost"
#define Stats_resync @"resync"
@interface MPUserStatsStats : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasGood_:1;
  BOOL hasLate_:1;
  BOOL hasLost_:1;
  BOOL hasResync_:1;
  UInt32 good;
  UInt32 late;
  UInt32 lost;
  UInt32 resync;
}
- (BOOL) hasGood;
- (BOOL) hasLate;
- (BOOL) hasLost;
- (BOOL) hasResync;
@property (readonly) UInt32 good;
@property (readonly) UInt32 late;
@property (readonly) UInt32 lost;
@property (readonly) UInt32 resync;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPUserStatsStatsBuilder*) builder;
+ (MPUserStatsStatsBuilder*) builder;
+ (MPUserStatsStatsBuilder*) builderWithPrototype:(MPUserStatsStats*) prototype;
- (MPUserStatsStatsBuilder*) toBuilder;

+ (MPUserStatsStats*) parseFromData:(NSData*) data;
+ (MPUserStatsStats*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPUserStatsStats*) parseFromInputStream:(NSInputStream*) input;
+ (MPUserStatsStats*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPUserStatsStats*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPUserStatsStats*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPUserStatsStatsBuilder : PBGeneratedMessageBuilder {
@private
  MPUserStatsStats* resultStats;
}

- (MPUserStatsStats*) defaultInstance;

- (MPUserStatsStatsBuilder*) clear;
- (MPUserStatsStatsBuilder*) clone;

- (MPUserStatsStats*) build;
- (MPUserStatsStats*) buildPartial;

- (MPUserStatsStatsBuilder*) mergeFrom:(MPUserStatsStats*) other;
- (MPUserStatsStatsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPUserStatsStatsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGood;
- (UInt32) good;
- (MPUserStatsStatsBuilder*) setGood:(UInt32) value;
- (MPUserStatsStatsBuilder*) clearGood;

- (BOOL) hasLate;
- (UInt32) late;
- (MPUserStatsStatsBuilder*) setLate:(UInt32) value;
- (MPUserStatsStatsBuilder*) clearLate;

- (BOOL) hasLost;
- (UInt32) lost;
- (MPUserStatsStatsBuilder*) setLost:(UInt32) value;
- (MPUserStatsStatsBuilder*) clearLost;

- (BOOL) hasResync;
- (UInt32) resync;
- (MPUserStatsStatsBuilder*) setResync:(UInt32) value;
- (MPUserStatsStatsBuilder*) clearResync;
@end

@interface MPUserStatsBuilder : PBGeneratedMessageBuilder {
@private
  MPUserStats* resultUserStats;
}

- (MPUserStats*) defaultInstance;

- (MPUserStatsBuilder*) clear;
- (MPUserStatsBuilder*) clone;

- (MPUserStats*) build;
- (MPUserStats*) buildPartial;

- (MPUserStatsBuilder*) mergeFrom:(MPUserStats*) other;
- (MPUserStatsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPUserStatsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSession;
- (UInt32) session;
- (MPUserStatsBuilder*) setSession:(UInt32) value;
- (MPUserStatsBuilder*) clearSession;

- (BOOL) hasStatsOnly;
- (BOOL) statsOnly;
- (MPUserStatsBuilder*) setStatsOnly:(BOOL) value;
- (MPUserStatsBuilder*) clearStatsOnly;

- (NSMutableArray *)certificates;
- (NSData*)certificatesAtIndex:(NSUInteger)index;
- (MPUserStatsBuilder *)addCertificates:(NSData*)value;
- (MPUserStatsBuilder *)setCertificatesArray:(NSArray *)array;
- (MPUserStatsBuilder *)clearCertificates;

- (BOOL) hasFromClient;
- (MPUserStatsStats*) fromClient;
- (MPUserStatsBuilder*) setFromClient:(MPUserStatsStats*) value;
- (MPUserStatsBuilder*) setFromClientBuilder:(MPUserStatsStatsBuilder*) builderForValue;
- (MPUserStatsBuilder*) mergeFromClient:(MPUserStatsStats*) value;
- (MPUserStatsBuilder*) clearFromClient;

- (BOOL) hasFromServer;
- (MPUserStatsStats*) fromServer;
- (MPUserStatsBuilder*) setFromServer:(MPUserStatsStats*) value;
- (MPUserStatsBuilder*) setFromServerBuilder:(MPUserStatsStatsBuilder*) builderForValue;
- (MPUserStatsBuilder*) mergeFromServer:(MPUserStatsStats*) value;
- (MPUserStatsBuilder*) clearFromServer;

- (BOOL) hasUdpPackets;
- (UInt32) udpPackets;
- (MPUserStatsBuilder*) setUdpPackets:(UInt32) value;
- (MPUserStatsBuilder*) clearUdpPackets;

- (BOOL) hasTcpPackets;
- (UInt32) tcpPackets;
- (MPUserStatsBuilder*) setTcpPackets:(UInt32) value;
- (MPUserStatsBuilder*) clearTcpPackets;

- (BOOL) hasUdpPingAvg;
- (Float32) udpPingAvg;
- (MPUserStatsBuilder*) setUdpPingAvg:(Float32) value;
- (MPUserStatsBuilder*) clearUdpPingAvg;

- (BOOL) hasUdpPingVar;
- (Float32) udpPingVar;
- (MPUserStatsBuilder*) setUdpPingVar:(Float32) value;
- (MPUserStatsBuilder*) clearUdpPingVar;

- (BOOL) hasTcpPingAvg;
- (Float32) tcpPingAvg;
- (MPUserStatsBuilder*) setTcpPingAvg:(Float32) value;
- (MPUserStatsBuilder*) clearTcpPingAvg;

- (BOOL) hasTcpPingVar;
- (Float32) tcpPingVar;
- (MPUserStatsBuilder*) setTcpPingVar:(Float32) value;
- (MPUserStatsBuilder*) clearTcpPingVar;

- (BOOL) hasVersion;
- (MPVersion*) version;
- (MPUserStatsBuilder*) setVersion:(MPVersion*) value;
- (MPUserStatsBuilder*) setVersionBuilder:(MPVersionBuilder*) builderForValue;
- (MPUserStatsBuilder*) mergeVersion:(MPVersion*) value;
- (MPUserStatsBuilder*) clearVersion;

- (PBAppendableArray *)celtVersions;
- (SInt32)celtVersionsAtIndex:(NSUInteger)index;
- (MPUserStatsBuilder *)addCeltVersions:(SInt32)value;
- (MPUserStatsBuilder *)setCeltVersionsArray:(NSArray *)array;
- (MPUserStatsBuilder *)setCeltVersionsValues:(const SInt32 *)values count:(NSUInteger)count;
- (MPUserStatsBuilder *)clearCeltVersions;

- (BOOL) hasAddress;
- (NSData*) address;
- (MPUserStatsBuilder*) setAddress:(NSData*) value;
- (MPUserStatsBuilder*) clearAddress;

- (BOOL) hasBandwidth;
- (UInt32) bandwidth;
- (MPUserStatsBuilder*) setBandwidth:(UInt32) value;
- (MPUserStatsBuilder*) clearBandwidth;

- (BOOL) hasOnlinesecs;
- (UInt32) onlinesecs;
- (MPUserStatsBuilder*) setOnlinesecs:(UInt32) value;
- (MPUserStatsBuilder*) clearOnlinesecs;

- (BOOL) hasIdlesecs;
- (UInt32) idlesecs;
- (MPUserStatsBuilder*) setIdlesecs:(UInt32) value;
- (MPUserStatsBuilder*) clearIdlesecs;

- (BOOL) hasStrongCertificate;
- (BOOL) strongCertificate;
- (MPUserStatsBuilder*) setStrongCertificate:(BOOL) value;
- (MPUserStatsBuilder*) clearStrongCertificate;

- (BOOL) hasOpus;
- (BOOL) opus;
- (MPUserStatsBuilder*) setOpus:(BOOL) value;
- (MPUserStatsBuilder*) clearOpus;
@end

#define RequestBlob_session_texture @"sessionTexture"
#define RequestBlob_session_comment @"sessionComment"
#define RequestBlob_channel_description @"channelDescription"
@interface MPRequestBlob : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  PBAppendableArray * sessionTextureArray;
  PBAppendableArray * sessionCommentArray;
  PBAppendableArray * channelDescriptionArray;
}
@property (readonly, strong) PBArray * sessionTexture;
@property (readonly, strong) PBArray * sessionComment;
@property (readonly, strong) PBArray * channelDescription;
- (UInt32)sessionTextureAtIndex:(NSUInteger)index;
- (UInt32)sessionCommentAtIndex:(NSUInteger)index;
- (UInt32)channelDescriptionAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPRequestBlobBuilder*) builder;
+ (MPRequestBlobBuilder*) builder;
+ (MPRequestBlobBuilder*) builderWithPrototype:(MPRequestBlob*) prototype;
- (MPRequestBlobBuilder*) toBuilder;

+ (MPRequestBlob*) parseFromData:(NSData*) data;
+ (MPRequestBlob*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPRequestBlob*) parseFromInputStream:(NSInputStream*) input;
+ (MPRequestBlob*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPRequestBlob*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPRequestBlob*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPRequestBlobBuilder : PBGeneratedMessageBuilder {
@private
  MPRequestBlob* resultRequestBlob;
}

- (MPRequestBlob*) defaultInstance;

- (MPRequestBlobBuilder*) clear;
- (MPRequestBlobBuilder*) clone;

- (MPRequestBlob*) build;
- (MPRequestBlob*) buildPartial;

- (MPRequestBlobBuilder*) mergeFrom:(MPRequestBlob*) other;
- (MPRequestBlobBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPRequestBlobBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)sessionTexture;
- (UInt32)sessionTextureAtIndex:(NSUInteger)index;
- (MPRequestBlobBuilder *)addSessionTexture:(UInt32)value;
- (MPRequestBlobBuilder *)setSessionTextureArray:(NSArray *)array;
- (MPRequestBlobBuilder *)setSessionTextureValues:(const UInt32 *)values count:(NSUInteger)count;
- (MPRequestBlobBuilder *)clearSessionTexture;

- (PBAppendableArray *)sessionComment;
- (UInt32)sessionCommentAtIndex:(NSUInteger)index;
- (MPRequestBlobBuilder *)addSessionComment:(UInt32)value;
- (MPRequestBlobBuilder *)setSessionCommentArray:(NSArray *)array;
- (MPRequestBlobBuilder *)setSessionCommentValues:(const UInt32 *)values count:(NSUInteger)count;
- (MPRequestBlobBuilder *)clearSessionComment;

- (PBAppendableArray *)channelDescription;
- (UInt32)channelDescriptionAtIndex:(NSUInteger)index;
- (MPRequestBlobBuilder *)addChannelDescription:(UInt32)value;
- (MPRequestBlobBuilder *)setChannelDescriptionArray:(NSArray *)array;
- (MPRequestBlobBuilder *)setChannelDescriptionValues:(const UInt32 *)values count:(NSUInteger)count;
- (MPRequestBlobBuilder *)clearChannelDescription;
@end

#define ServerConfig_max_bandwidth @"maxBandwidth"
#define ServerConfig_welcome_text @"welcomeText"
#define ServerConfig_allow_html @"allowHtml"
#define ServerConfig_message_length @"messageLength"
#define ServerConfig_image_message_length @"imageMessageLength"
#define ServerConfig_max_users @"maxUsers"
@interface MPServerConfig : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasAllowHtml_:1;
  BOOL hasWelcomeText_:1;
  BOOL hasMaxBandwidth_:1;
  BOOL hasMessageLength_:1;
  BOOL hasImageMessageLength_:1;
  BOOL hasMaxUsers_:1;
  BOOL allowHtml_:1;
  NSString* welcomeText;
  UInt32 maxBandwidth;
  UInt32 messageLength;
  UInt32 imageMessageLength;
  UInt32 maxUsers;
}
- (BOOL) hasMaxBandwidth;
- (BOOL) hasWelcomeText;
- (BOOL) hasAllowHtml;
- (BOOL) hasMessageLength;
- (BOOL) hasImageMessageLength;
- (BOOL) hasMaxUsers;
@property (readonly) UInt32 maxBandwidth;
@property (readonly, strong) NSString* welcomeText;
- (BOOL) allowHtml;
@property (readonly) UInt32 messageLength;
@property (readonly) UInt32 imageMessageLength;
@property (readonly) UInt32 maxUsers;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPServerConfigBuilder*) builder;
+ (MPServerConfigBuilder*) builder;
+ (MPServerConfigBuilder*) builderWithPrototype:(MPServerConfig*) prototype;
- (MPServerConfigBuilder*) toBuilder;

+ (MPServerConfig*) parseFromData:(NSData*) data;
+ (MPServerConfig*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPServerConfig*) parseFromInputStream:(NSInputStream*) input;
+ (MPServerConfig*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPServerConfig*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPServerConfig*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPServerConfigBuilder : PBGeneratedMessageBuilder {
@private
  MPServerConfig* resultServerConfig;
}

- (MPServerConfig*) defaultInstance;

- (MPServerConfigBuilder*) clear;
- (MPServerConfigBuilder*) clone;

- (MPServerConfig*) build;
- (MPServerConfig*) buildPartial;

- (MPServerConfigBuilder*) mergeFrom:(MPServerConfig*) other;
- (MPServerConfigBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPServerConfigBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMaxBandwidth;
- (UInt32) maxBandwidth;
- (MPServerConfigBuilder*) setMaxBandwidth:(UInt32) value;
- (MPServerConfigBuilder*) clearMaxBandwidth;

- (BOOL) hasWelcomeText;
- (NSString*) welcomeText;
- (MPServerConfigBuilder*) setWelcomeText:(NSString*) value;
- (MPServerConfigBuilder*) clearWelcomeText;

- (BOOL) hasAllowHtml;
- (BOOL) allowHtml;
- (MPServerConfigBuilder*) setAllowHtml:(BOOL) value;
- (MPServerConfigBuilder*) clearAllowHtml;

- (BOOL) hasMessageLength;
- (UInt32) messageLength;
- (MPServerConfigBuilder*) setMessageLength:(UInt32) value;
- (MPServerConfigBuilder*) clearMessageLength;

- (BOOL) hasImageMessageLength;
- (UInt32) imageMessageLength;
- (MPServerConfigBuilder*) setImageMessageLength:(UInt32) value;
- (MPServerConfigBuilder*) clearImageMessageLength;

- (BOOL) hasMaxUsers;
- (UInt32) maxUsers;
- (MPServerConfigBuilder*) setMaxUsers:(UInt32) value;
- (MPServerConfigBuilder*) clearMaxUsers;
@end

#define SuggestConfig_version @"version"
#define SuggestConfig_positional @"positional"
#define SuggestConfig_push_to_talk @"pushToTalk"
@interface MPSuggestConfig : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPositional_:1;
  BOOL hasPushToTalk_:1;
  BOOL hasVersion_:1;
  BOOL positional_:1;
  BOOL pushToTalk_:1;
  UInt32 version;
}
- (BOOL) hasVersion;
- (BOOL) hasPositional;
- (BOOL) hasPushToTalk;
@property (readonly) UInt32 version;
- (BOOL) positional;
- (BOOL) pushToTalk;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPSuggestConfigBuilder*) builder;
+ (MPSuggestConfigBuilder*) builder;
+ (MPSuggestConfigBuilder*) builderWithPrototype:(MPSuggestConfig*) prototype;
- (MPSuggestConfigBuilder*) toBuilder;

+ (MPSuggestConfig*) parseFromData:(NSData*) data;
+ (MPSuggestConfig*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPSuggestConfig*) parseFromInputStream:(NSInputStream*) input;
+ (MPSuggestConfig*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPSuggestConfig*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPSuggestConfig*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPSuggestConfigBuilder : PBGeneratedMessageBuilder {
@private
  MPSuggestConfig* resultSuggestConfig;
}

- (MPSuggestConfig*) defaultInstance;

- (MPSuggestConfigBuilder*) clear;
- (MPSuggestConfigBuilder*) clone;

- (MPSuggestConfig*) build;
- (MPSuggestConfig*) buildPartial;

- (MPSuggestConfigBuilder*) mergeFrom:(MPSuggestConfig*) other;
- (MPSuggestConfigBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPSuggestConfigBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasVersion;
- (UInt32) version;
- (MPSuggestConfigBuilder*) setVersion:(UInt32) value;
- (MPSuggestConfigBuilder*) clearVersion;

- (BOOL) hasPositional;
- (BOOL) positional;
- (MPSuggestConfigBuilder*) setPositional:(BOOL) value;
- (MPSuggestConfigBuilder*) clearPositional;

- (BOOL) hasPushToTalk;
- (BOOL) pushToTalk;
- (MPSuggestConfigBuilder*) setPushToTalk:(BOOL) value;
- (MPSuggestConfigBuilder*) clearPushToTalk;
@end

#define PluginDataTransmission_senderSession @"senderSession"
#define PluginDataTransmission_receiverSessions @"receiverSessions"
#define PluginDataTransmission_data @"data"
#define PluginDataTransmission_dataID @"dataId"
@interface MPPluginDataTransmission : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasDataId_:1;
  BOOL hasData_:1;
  BOOL hasSenderSession_:1;
  NSString* dataId;
  NSData* data;
  UInt32 senderSession;
  PBAppendableArray * receiverSessionsArray;
  SInt32 receiverSessionsMemoizedSerializedSize;
}
- (BOOL) hasSenderSession;
- (BOOL) hasData;
- (BOOL) hasDataId;
@property (readonly) UInt32 senderSession;
@property (readonly, strong) PBArray * receiverSessions;
@property (readonly, strong) NSData* data;
@property (readonly, strong) NSString* dataId;
- (UInt32)receiverSessionsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MPPluginDataTransmissionBuilder*) builder;
+ (MPPluginDataTransmissionBuilder*) builder;
+ (MPPluginDataTransmissionBuilder*) builderWithPrototype:(MPPluginDataTransmission*) prototype;
- (MPPluginDataTransmissionBuilder*) toBuilder;

+ (MPPluginDataTransmission*) parseFromData:(NSData*) data;
+ (MPPluginDataTransmission*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPPluginDataTransmission*) parseFromInputStream:(NSInputStream*) input;
+ (MPPluginDataTransmission*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MPPluginDataTransmission*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MPPluginDataTransmission*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MPPluginDataTransmissionBuilder : PBGeneratedMessageBuilder {
@private
  MPPluginDataTransmission* resultPluginDataTransmission;
}

- (MPPluginDataTransmission*) defaultInstance;

- (MPPluginDataTransmissionBuilder*) clear;
- (MPPluginDataTransmissionBuilder*) clone;

- (MPPluginDataTransmission*) build;
- (MPPluginDataTransmission*) buildPartial;

- (MPPluginDataTransmissionBuilder*) mergeFrom:(MPPluginDataTransmission*) other;
- (MPPluginDataTransmissionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MPPluginDataTransmissionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSenderSession;
- (UInt32) senderSession;
- (MPPluginDataTransmissionBuilder*) setSenderSession:(UInt32) value;
- (MPPluginDataTransmissionBuilder*) clearSenderSession;

- (PBAppendableArray *)receiverSessions;
- (UInt32)receiverSessionsAtIndex:(NSUInteger)index;
- (MPPluginDataTransmissionBuilder *)addReceiverSessions:(UInt32)value;
- (MPPluginDataTransmissionBuilder *)setReceiverSessionsArray:(NSArray *)array;
- (MPPluginDataTransmissionBuilder *)setReceiverSessionsValues:(const UInt32 *)values count:(NSUInteger)count;
- (MPPluginDataTransmissionBuilder *)clearReceiverSessions;

- (BOOL) hasData;
- (NSData*) data;
- (MPPluginDataTransmissionBuilder*) setData:(NSData*) value;
- (MPPluginDataTransmissionBuilder*) clearData;

- (BOOL) hasDataId;
- (NSString*) dataId;
- (MPPluginDataTransmissionBuilder*) setDataId:(NSString*) value;
- (MPPluginDataTransmissionBuilder*) clearDataId;
@end


// @@protoc_insertion_point(global_scope)
